{"version":3,"sources":["nextjournal/view.cljs"],"mappings":"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","names":["nextjournal.view/memoized-frame-fn","component","memo-key","ctx-function","val__55756__auto__","obj60030","js/undefined","f","cljs.core.partial","obj60031","obj60032","obj60033","nextjournal.view/get-key","k","not-found","G__60037","cljs.core/Keyword","reagent.core/props","reagent.core/state-atom","reagent.core/argv","obj60039","re-frame.frame/subscribe","re-frame.frame/dispatch","re-frame.frame/dispatch-sync","cljs.core.get","nextjournal.view/wrap-render","c","argv","reagent.impl.component/get-argv","props?","n","cljs.core/count","first-child","extra-children","G__60042","cljs.core.nth","cljs.core.into_array","p__60044","map__60045","cljs.core/--destructure-map","initial-state","nextjournal.view/constructor-fn","constructor","p__60049","map__60051","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","obj60055","js/goog.reflect.objectProperty","this","props","x60058","o","temp__5757__auto__","or__4223__auto__","G__60062","reagent.impl.component/extract-props","state","cljs.core/fn?","state-atom","G__60063","reagent.ratom/RAtom","reagent.core.atom","nextjournal.view/wrap-methods","m","cljs.core.assoc","js/nextjournal","js/nextjournal.view","js/nextjournal.view.*notify-watches?*","nextjournal.view/*notify-watches?*","js/window","obj60066","inner-obj__55864__auto__","child60068","child60067","new-child__55813__auto__","obj60073","obj60076","obj60081","o__55858__auto__","o__55852__auto__","obj60086","notify-w","old","new","var_args","args__4835__auto__","len__4829__auto__","i__4830__auto__","argseq__4836__auto__","cljs.core/IndexedSeq","nextjournal.view/swap-silently!","seq60092","self__4817__auto__","cljs.core/seq","args","*notify-watches?*-orig-val__60114","*notify-watches?*-temp-val__60115","cljs.core/swap!","nextjournal.view/reset-silently!","ratom","value","*notify-watches?*-orig-val__60119","*notify-watches?*-temp-val__60120","cljs.core/reset!"],"sourcesContent":["(ns nextjournal.view\r\n  (:require [applied-science.js-interop :as j]\r\n            [re-frame.context :as re-frame]\r\n            [re-frame.frame :as frame]\r\n            [reagent.core :as r]\r\n            [reagent.impl.component :as c]\r\n            [reagent.ratom :as ratom])\r\n  (:require-macros [nextjournal.view :as v]))\r\n\r\n(defn memoized-frame-fn\r\n  ;; only create these partially-applied functions once per component.\r\n  ;; same outcome as `with-let`\r\n  [component ^string memo-key ctx-function]\r\n  (j/get component memo-key\r\n         (let [f (partial ctx-function (j/get component :context))]\r\n           (j/assoc! component memo-key f)\r\n           f)))\r\n\r\n(defn get-key\r\n  \"Reads a key from `component`\"\r\n  [component k not-found]\r\n  (case k ::props (r/props component)\r\n          ::state (r/state-atom component)\r\n          ::argv (r/argv component)\r\n\r\n          ::re-frame/frame (j/get component :context)\r\n          ::re-frame/subscribe (memoized-frame-fn component \"rf_subscribe\" frame/subscribe)\r\n          ::re-frame/dispatch (memoized-frame-fn component \"rf_dispatch\" frame/dispatch)\r\n          ::re-frame/dispatch-sync (memoized-frame-fn component \"rf_dispatch_sync\" frame/dispatch-sync)\r\n\r\n          ;; add other keys here\r\n\r\n          ;; fall back to reading keys from props\r\n          (get (r/props component) k not-found)))\r\n\r\n(defn wrap-render [f]\r\n  ;; the render-function is always be passed `this` as the first argument,\r\n  ;; followed by child elements, NOT including a props map - props can be read\r\n  ;; from `this`\r\n  (fn [c]\r\n    (let [argv (c/get-argv c)\r\n          props? (some? (r/props c))\r\n          n (count argv)\r\n          first-child (if props? 2 1)\r\n          extra-children (if props? (- n 2) (- n 1))]\r\n      (case extra-children\r\n        0 (.call f c c)\r\n        1 (.call f c c (nth argv first-child))\r\n        2 (.call f c c (nth argv first-child) (nth argv (+ 1 first-child)))\r\n        3 (.call f c c (nth argv first-child) (nth argv (+ 1 first-child)) (nth argv (+ 2 first-child)))\r\n        4 (.call f c c (nth argv first-child) (nth argv (+ 1 first-child)) (nth argv (+ 2 first-child)) (nth argv (+ 3 first-child)))\r\n        (.apply f c (.slice (into-array argv) 1))))))\r\n\r\n(defn constructor-fn [{:keys [constructor ::initial-state]}]\r\n  (j/fn [^js this ^:js {:as props :syms [argv]}]\r\n\r\n    (specify! this\r\n      ILookup\r\n      (-lookup\r\n        ([o k] (get-key o k nil))\r\n        ([o k not-found] (get-key o k not-found))))\r\n\r\n    ;; initial-state can be provided statically in methods-map, or passed in as a prop (eg. for devcards)\r\n    (when-some [initial-state (or (some-> argv (c/extract-props) ::initial-state)\r\n                                  initial-state)]\r\n      (let [state (if (fn? initial-state) (initial-state this) initial-state)\r\n            state-atom (cond-> state\r\n                         (not (instance? ratom/RAtom state)) r/atom)]\r\n        (set! (.-cljsState this) state-atom)))\r\n\r\n    (when constructor (constructor this props))\r\n    this))\r\n\r\n(defn wrap-methods [m]\r\n  (-> m\r\n      (assoc :constructor (constructor-fn m))))\r\n\r\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\r\n;; Silent updates\r\n;;\r\n;; (useful where you want to update a view's state-atom\r\n;;  without triggering an update)\r\n\r\n(defonce ^:dynamic *notify-watches?*\r\n  ;; patch Reagent to enable disabling of reactive updates\r\n  ;; TODO - verify that this works in advanced.\r\n  ;;        can't use ratom/notify-w, b/c it is private.\r\n  (do (when (exists? js/window)\r\n        (j/update-in! js/window [.-reagent .-ratom .-notify-w]\r\n                      (fn [notify-w]\r\n                        (fn [this old new]\r\n                          (when (true? *notify-watches?*)\r\n                            (notify-w this old new))))))\r\n      true))\r\n\r\n(defn swap-silently!\r\n  \"Swap a reactive atom, without causing dependent components to re-render.\"\r\n  [& args]\r\n  (v/silently (apply swap! args)))\r\n\r\n(defn reset-silently!\r\n  [ratom value]\r\n  (v/silently (reset! ratom value)))\r\n\r\n"]}