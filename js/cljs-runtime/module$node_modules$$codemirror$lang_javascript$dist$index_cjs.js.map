{
"version":3,
"file":"module$node_modules$$codemirror$lang_javascript$dist$index_cjs.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/@codemirror/lang-javascript/dist/index.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$$codemirror$lang_javascript$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar javascript$1 = require('@lezer/javascript');\nvar language = require('@codemirror/language');\nvar state = require('@codemirror/state');\nvar view = require('@codemirror/view');\nvar autocomplete = require('@codemirror/autocomplete');\nvar common = require('@lezer/common');\n\n/**\nA collection of JavaScript-related\n[snippets](https://codemirror.net/6/docs/ref/#autocomplete.snippet).\n*/\nconst snippets = [\n    autocomplete.snippetCompletion(\"function ${name}(${params}) {\\n\\t${}\\n}\", {\n        label: \"function\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"for (let ${name} of ${collection}) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"of loop\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"do {\\n\\t${}\\n} while (${})\", {\n        label: \"do\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"while (${}) {\\n\\t${}\\n}\", {\n        label: \"while\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\", {\n        label: \"try\",\n        detail: \"/ catch block\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"if (${}) {\\n\\t${}\\n}\", {\n        label: \"if\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"if (${}) {\\n\\t${}\\n} else {\\n\\t${}\\n}\", {\n        label: \"if\",\n        detail: \"/ else block\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"import {${names}} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"named\",\n        type: \"keyword\"\n    }),\n    autocomplete.snippetCompletion(\"import ${name} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"default\",\n        type: \"keyword\"\n    })\n];\n\nconst cache = new common.NodeWeakMap();\nconst ScopeNodes = new Set([\n    \"Script\", \"Block\",\n    \"FunctionExpression\", \"FunctionDeclaration\", \"ArrowFunction\", \"MethodDeclaration\",\n    \"ForStatement\"\n]);\nfunction defID(type) {\n    return (node, def) => {\n        let id = node.node.getChild(\"VariableDefinition\");\n        if (id)\n            def(id, type);\n        return true;\n    };\n}\nconst functionContext = [\"FunctionDeclaration\"];\nconst gatherCompletions = {\n    FunctionDeclaration: defID(\"function\"),\n    ClassDeclaration: defID(\"class\"),\n    ClassExpression: () => true,\n    EnumDeclaration: defID(\"constant\"),\n    TypeAliasDeclaration: defID(\"type\"),\n    NamespaceDeclaration: defID(\"namespace\"),\n    VariableDefinition(node, def) { if (!node.matchContext(functionContext))\n        def(node, \"variable\"); },\n    TypeDefinition(node, def) { def(node, \"type\"); },\n    __proto__: null\n};\nfunction getScope(doc, node) {\n    let cached = cache.get(node);\n    if (cached)\n        return cached;\n    let completions = [], top = true;\n    function def(node, type) {\n        let name = doc.sliceString(node.from, node.to);\n        completions.push({ label: name, type });\n    }\n    node.cursor(common.IterMode.IncludeAnonymous).iterate(node => {\n        if (top) {\n            top = false;\n        }\n        else if (node.name) {\n            let gather = gatherCompletions[node.name];\n            if (gather && gather(node, def) || ScopeNodes.has(node.name))\n                return false;\n        }\n        else if (node.to - node.from > 8192) {\n            // Allow caching for bigger internal nodes\n            for (let c of getScope(doc, node.node))\n                completions.push(c);\n            return false;\n        }\n    });\n    cache.set(node, completions);\n    return completions;\n}\nconst Identifier = /^[\\w$\\xa1-\\uffff][\\w$\\d\\xa1-\\uffff]*$/;\nconst dontComplete = [\n    \"TemplateString\", \"String\", \"RegExp\",\n    \"LineComment\", \"BlockComment\",\n    \"VariableDefinition\", \"TypeDefinition\", \"Label\",\n    \"PropertyDefinition\", \"PropertyName\",\n    \"PrivatePropertyDefinition\", \"PrivatePropertyName\"\n];\n/**\nCompletion source that looks up locally defined names in\nJavaScript code.\n*/\nfunction localCompletionSource(context) {\n    let inner = language.syntaxTree(context.state).resolveInner(context.pos, -1);\n    if (dontComplete.indexOf(inner.name) > -1)\n        return null;\n    let isWord = inner.to - inner.from < 20 && Identifier.test(context.state.sliceDoc(inner.from, inner.to));\n    if (!isWord && !context.explicit)\n        return null;\n    let options = [];\n    for (let pos = inner; pos; pos = pos.parent) {\n        if (ScopeNodes.has(pos.name))\n            options = options.concat(getScope(context.state.doc, pos));\n    }\n    return {\n        options,\n        from: isWord ? inner.from : context.pos,\n        validFor: Identifier\n    };\n}\n\n/**\nA language provider based on the [Lezer JavaScript\nparser](https://github.com/lezer-parser/javascript), extended with\nhighlighting and indentation information.\n*/\nconst javascriptLanguage = language.LRLanguage.define({\n    parser: javascript$1.parser.configure({\n        props: [\n            language.indentNodeProp.add({\n                IfStatement: language.continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: language.continuedIndent({ except: /^\\s*({|catch\\b|finally\\b)/ }),\n                LabeledStatement: language.flatIndent,\n                SwitchBody: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: language.delimitedIndent({ closing: \"}\" }),\n                ArrowFunction: cx => cx.baseIndent + cx.unit,\n                \"TemplateString BlockComment\": () => -1,\n                \"Statement Property\": language.continuedIndent({ except: /^{/ }),\n                JSXElement(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                JSXEscape(context) {\n                    let closed = /\\s*\\}/.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"JSXOpenTag JSXSelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            language.foldNodeProp.add({\n                \"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression\": language.foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n        wordChars: \"$\"\n    }\n});\n/**\nA language provider for TypeScript.\n*/\nconst typescriptLanguage = javascriptLanguage.configure({ dialect: \"ts\" });\n/**\nLanguage provider for JSX.\n*/\nconst jsxLanguage = javascriptLanguage.configure({ dialect: \"jsx\" });\n/**\nLanguage provider for JSX + TypeScript.\n*/\nconst tsxLanguage = javascriptLanguage.configure({ dialect: \"jsx ts\" });\nconst keywords = \"break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield\".split(\" \").map(kw => ({ label: kw, type: \"keyword\" }));\n/**\nJavaScript support. Includes [snippet](https://codemirror.net/6/docs/ref/#lang-javascript.snippets)\ncompletion.\n*/\nfunction javascript(config = {}) {\n    let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)\n        : config.typescript ? typescriptLanguage : javascriptLanguage;\n    return new language.LanguageSupport(lang, [\n        javascriptLanguage.data.of({\n            autocomplete: autocomplete.ifNotIn(dontComplete, autocomplete.completeFromList(snippets.concat(keywords)))\n        }),\n        javascriptLanguage.data.of({\n            autocomplete: localCompletionSource\n        }),\n        config.jsx ? autoCloseTags : [],\n    ]);\n}\nfunction elementName(doc, tree, max = doc.length) {\n    if (!tree)\n        return \"\";\n    let name = tree.getChild(\"JSXIdentifier\");\n    return name ? doc.sliceString(name.from, Math.min(name.to, max)) : \"\";\n}\nconst android = typeof navigator == \"object\" && /Android\\b/.test(navigator.userAgent);\n/**\nExtension that will automatically insert JSX close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = view.EditorView.inputHandler.of((view, from, to, text) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly ||\n        from != to || (text != \">\" && text != \"/\") ||\n        !javascriptLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let { state: state$1 } = view;\n    let changes = state$1.changeByRange(range => {\n        var _a, _b, _c;\n        let { head } = range, around = language.syntaxTree(state$1).resolveInner(head, -1), name;\n        if (around.name == \"JSXStartTag\")\n            around = around.parent;\n        if (text == \">\" && around.name == \"JSXFragmentTag\") {\n            return { range: state.EditorSelection.cursor(head + 1), changes: { from: head, insert: `><>` } };\n        }\n        else if (text == \">\" && around.name == \"JSXIdentifier\") {\n            if (((_b = (_a = around.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"JSXEndTag\" && (name = elementName(state$1.doc, around.parent, head)))\n                return { range: state.EditorSelection.cursor(head + 1), changes: { from: head, insert: `></${name}>` } };\n        }\n        else if (text == \"/\" && around.name == \"JSXFragmentTag\") {\n            let empty = around.parent, base = empty === null || empty === void 0 ? void 0 : empty.parent;\n            if (empty.from == head - 1 && ((_c = base.lastChild) === null || _c === void 0 ? void 0 : _c.name) != \"JSXEndTag\" && (name = elementName(state$1.doc, base === null || base === void 0 ? void 0 : base.firstChild, head))) {\n                let insert = `/${name}>`;\n                return { range: state.EditorSelection.cursor(head + insert.length), changes: { from: head, insert } };\n            }\n        }\n        return { range };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { userEvent: \"input.type\", scrollIntoView: true });\n    return true;\n});\n\n/**\nConnects an [ESLint](https://eslint.org/) linter to CodeMirror's\n[lint](https://codemirror.net/6/docs/ref/#lint) integration. `eslint` should be an instance of the\n[`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)\nclass, and `config` an optional ESLint configuration. The return\nvalue of this function can be passed to [`linter`](https://codemirror.net/6/docs/ref/#lint.linter)\nto create a JavaScript linting extension.\n\nNote that ESLint targets node, and is tricky to run in the\nbrowser. The [eslint4b](https://github.com/mysticatea/eslint4b)\nand\n[eslint4b-prebuilt](https://github.com/marijnh/eslint4b-prebuilt/)\npackages may help with that.\n*/\nfunction esLint(eslint, config) {\n    if (!config) {\n        config = {\n            parserOptions: { ecmaVersion: 2019, sourceType: \"module\" },\n            env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },\n            rules: {}\n        };\n        eslint.getRules().forEach((desc, name) => {\n            if (desc.meta.docs.recommended)\n                config.rules[name] = 2;\n        });\n    }\n    return (view) => {\n        let { state } = view, found = [];\n        for (let { from, to } of javascriptLanguage.findRegions(state)) {\n            let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };\n            for (let d of eslint.verify(state.sliceDoc(from, to), config))\n                found.push(translateDiagnostic(d, state.doc, offset));\n        }\n        return found;\n    };\n}\nfunction mapPos(line, col, doc, offset) {\n    return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);\n}\nfunction translateDiagnostic(input, doc, offset) {\n    let start = mapPos(input.line, input.column, doc, offset);\n    let result = {\n        from: start,\n        to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,\n        message: input.message,\n        source: input.ruleId ? \"jshint:\" + input.ruleId : \"jshint\",\n        severity: input.severity == 1 ? \"warning\" : \"error\",\n    };\n    if (input.fix) {\n        let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;\n        result.actions = [{\n                name: \"fix\",\n                apply(view, start) {\n                    view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });\n                }\n            }];\n    }\n    return result;\n}\n\nexports.autoCloseTags = autoCloseTags;\nexports.esLint = esLint;\nexports.javascript = javascript;\nexports.javascriptLanguage = javascriptLanguage;\nexports.jsxLanguage = jsxLanguage;\nexports.localCompletionSource = localCompletionSource;\nexports.snippets = snippets;\nexports.tsxLanguage = tsxLanguage;\nexports.typescriptLanguage = typescriptLanguage;\n\n};"],
"names":["shadow$provide","global","require","module","exports","defID","type","node","def","id","getChild","getScope","doc","name","sliceString","from","to","completions","push","label","cached","cache","get","top","cursor","common","IterMode","IncludeAnonymous","iterate","gather","gatherCompletions","ScopeNodes","has","c","set","localCompletionSource","context","inner","language","syntaxTree","state","resolveInner","pos","dontComplete","indexOf","isWord","Identifier","test","sliceDoc","explicit","options","parent","concat","validFor","elementName","tree","max","length","Math","min","mapPos","line","col","offset","translateDiagnostic","input","start","column","result","endLine","endColumn","message","source","ruleId","severity","fix","range","text","actions","apply","view","dispatch","changes","insert","scrollIntoView","Object","defineProperty","value","javascript$1","autocomplete","snippets","snippetCompletion","detail","NodeWeakMap","Set","functionContext","FunctionDeclaration","ClassDeclaration","ClassExpression","EnumDeclaration","TypeAliasDeclaration","NamespaceDeclaration","VariableDefinition","matchContext","TypeDefinition","__proto__","javascriptLanguage","LRLanguage","define","parser","configure","props","indentNodeProp","add","IfStatement","continuedIndent","except","TryStatement","LabeledStatement","flatIndent","SwitchBody","after","textAfter","closed","isCase","baseIndent","unit","Block","delimitedIndent","closing","ArrowFunction","cx","TemplateString BlockComment","JSXElement","lineIndent","JSXEscape","foldNodeProp","foldInside","BlockComment","languageData","closeBrackets","brackets","commentTokens","block","open","close","indentOnInput","wordChars","typescriptLanguage","dialect","jsxLanguage","tsxLanguage","keywords","map","kw","android","navigator","userAgent","autoCloseTags","EditorView","inputHandler","of","composing","compositionStarted","readOnly","isActiveAt","state$1","changeByRange","_a","_b","_c","head","around","EditorSelection","lastChild","empty","base","firstChild","userEvent","esLint","eslint","config","parserOptions","ecmaVersion","sourceType","env","browser","es6","es2015","es2017","es2020","rules","getRules","forEach","desc","meta","docs","recommended","found","findRegions","fromLine","lineAt","number","d","verify","javascript","LanguageSupport","jsx","lang","typescript","data","ifNotIn","completeFromList"]
}
