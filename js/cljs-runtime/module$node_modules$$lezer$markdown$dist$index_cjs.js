shadow$provide.module$node_modules$$lezer$markdown$dist$index_cjs=function(global,require,module,exports){function skipForList(bl,cx,line){if(line.pos==line.text.length||bl!=cx.block&&line.indent>=cx.stack[line.depth+1].value+line.baseIndent)return!0;if(line.indent>=line.baseIndent+4)return!1;let size=(bl.type==Type$jscomp$0.OrderedList?isOrderedList:isBulletList)(line,cx,!1);return 0<size&&(bl.type!=Type$jscomp$0.BulletList||0>isHorizontalRule(line,cx,!1))&&line.text.charCodeAt(line.pos+size-1)==
bl.value}function space(ch){return 32==ch||9==ch||10==ch||13==ch}function skipSpace(line,i=0){for(;i<line.length&&space(line.charCodeAt(i));)i++;return i}function skipSpaceBack(line,i,to){for(;i>to&&space(line.charCodeAt(i-1));)i--;return i}function isFencedCode(line){if(96!=line.next&&126!=line.next)return-1;let pos=line.pos+1;for(;pos<line.text.length&&line.text.charCodeAt(pos)==line.next;)pos++;if(pos<line.pos+3)return-1;if(96==line.next)for(let i=pos;i<line.text.length;i++)if(96==line.text.charCodeAt(i))return-1;
return pos}function isHorizontalRule(line,cx,breaking){if(42!=line.next&&45!=line.next&&95!=line.next)return-1;let count=1;for(let pos=line.pos+1;pos<line.text.length;pos++){let ch=line.text.charCodeAt(pos);if(ch==line.next)count++;else if(!space(ch))return-1}return breaking&&45==line.next&&-1<isSetextUnderline(line)&&line.depth==cx.stack.length?-1:3>count?-1:1}function inList(cx,type){for(let i=cx.stack.length-1;0<=i;i--)if(cx.stack[i].type==type)return!0;return!1}function isBulletList(line,cx,breaking){return 45!=
line.next&&43!=line.next&&42!=line.next||line.pos!=line.text.length-1&&!space(line.text.charCodeAt(line.pos+1))||!(!breaking||inList(cx,Type$jscomp$0.BulletList)||line.skipSpace(line.pos+2)<line.text.length)?-1:1}function isOrderedList(line,cx,breaking){let pos=line.pos,next=line.next;for(;;){if(48<=next&&57>=next)pos++;else break;if(pos==line.text.length)return-1;next=line.text.charCodeAt(pos)}return pos==line.pos||pos>line.pos+9||46!=next&&41!=next||pos<line.text.length-1&&!space(line.text.charCodeAt(pos+
1))||breaking&&!inList(cx,Type$jscomp$0.OrderedList)&&(line.skipSpace(pos+1)==line.text.length||pos>line.pos+1||49!=line.next)?-1:pos+1-line.pos}function isAtxHeading(line){if(35!=line.next)return-1;let pos=line.pos+1;for(;pos<line.text.length&&35==line.text.charCodeAt(pos);)pos++;if(pos<line.text.length&&32!=line.text.charCodeAt(pos))return-1;line=pos-line.pos;return 6<line?-1:line}function isSetextUnderline(line){if(45!=line.next&&61!=line.next||line.indent>=line.baseIndent+4)return-1;let pos=line.pos+
1;for(;pos<line.text.length&&line.text.charCodeAt(pos)==line.next;)pos++;let end=pos;for(;pos<line.text.length&&space(line.text.charCodeAt(pos));)pos++;return pos==line.text.length?end:-1}function isHTMLBlock(line,_cx,breaking){if(60!=line.next)return-1;line=line.text.slice(line.pos);for(let i=0,e=HTMLBlockStyle.length-(breaking?1:0);i<e;i++)if(HTMLBlockStyle[i][0].test(line))return i;return-1}function getListIndent(line,pos){let indentAfter=line.countIndent(pos,line.pos,line.indent);line=line.countIndent(line.skipSpace(pos),
pos,indentAfter);return line>=indentAfter+5?indentAfter+1:line}function addCodeText(marks,from,to){let last=marks.length-1;0<=last&&marks[last].to==from&&marks[last].type==Type$jscomp$0.CodeText?marks[last].to=to:marks.push(elt$jscomp$0(Type$jscomp$0.CodeText,from,to))}function lineEnd(text,pos){for(;pos<text.length;pos++){let next=text.charCodeAt(pos);if(10==next)break;if(!space(next))return-1}return pos}function injectGaps(ranges,rangeI,tree,offset,dont){function movePastNext(upto,inclusive){for(;inclusive?
upto>=rangeEnd:upto>rangeEnd;){let size=ranges[rangeI+1].from-rangeEnd;offset+=size;upto+=size;rangeI++;rangeEnd=ranges[rangeI].to}}if(dont.has(tree.tree))return tree.tree;let rangeEnd=ranges[rangeI].to,children=[],positions=[],start=tree.from+offset;for(let ch=tree.firstChild;ch;ch=ch.nextSibling){movePastNext(ch.from+offset,!0);let from=ch.from+offset,node;ch.to+offset>rangeEnd?(node=injectGaps(ranges,rangeI,ch,offset,dont),movePastNext(ch.to+offset,!1)):node=ch.toTree();children.push(node);positions.push(from-
start)}movePastNext(tree.to+offset,!1);return new common.Tree(tree.type,children,positions,tree.to+offset-start,tree.tree?tree.tree.propValues:void 0)}function nonEmpty(a){return null!=a&&0<a.length}function resolveConfig(spec){if(!Array.isArray(spec))return spec;if(0==spec.length)return null;let conf=resolveConfig(spec[0]);if(1==spec.length)return conf;spec=resolveConfig(spec.slice(1));if(!spec||!conf)return conf||spec;let wrapA=conf.wrap,wrapB=spec.wrap;return{props:(conf.props||none).concat(spec.props||
none),defineNodes:(conf.defineNodes||none).concat(spec.defineNodes||none),parseBlock:(conf.parseBlock||none).concat(spec.parseBlock||none),parseInline:(conf.parseInline||none).concat(spec.parseInline||none),remove:(conf.remove||none).concat(spec.remove||none),wrap:wrapA?wrapB?(inner,input,fragments,ranges)=>wrapA(wrapB(inner,input,fragments,ranges),input,fragments,ranges):wrapA:wrapB}}function findName(names,name){names=names.indexOf(name);if(0>names)throw new RangeError(`Position specified relative to unknown parser ${name}`);
return names}function elt$jscomp$0(type,from,to,children){return new Element(type,from,to,children)}function parseURL(text,start,offset){if(60==text.charCodeAt(start)){for(var pos=start+1;pos<text.length;pos++){var ch$jscomp$0=text.charCodeAt(pos);if(62==ch$jscomp$0)return elt$jscomp$0(Type$jscomp$0.URL,start+offset,pos+1+offset);if(60==ch$jscomp$0||10==ch$jscomp$0)return!1}return null}pos=0;ch$jscomp$0=start;for(let escaped=!1;ch$jscomp$0<text.length;ch$jscomp$0++){let ch=text.charCodeAt(ch$jscomp$0);
if(space(ch))break;else if(escaped)escaped=!1;else if(40==ch)pos++;else if(41==ch){if(!pos)break;pos--}else 92==ch&&(escaped=!0)}return ch$jscomp$0>start?elt$jscomp$0(Type$jscomp$0.URL,start+offset,ch$jscomp$0+offset):ch$jscomp$0==text.length?null:!1}function parseLinkTitle(text,start,offset){var next=text.charCodeAt(start);if(39!=next&&34!=next&&40!=next)return!1;next=40==next?41:next;for(let pos=start+1,escaped=!1;pos<text.length;pos++){let ch=text.charCodeAt(pos);if(escaped)escaped=!1;else{if(ch==
next)return elt$jscomp$0(Type$jscomp$0.LinkTitle,start+offset,pos+1+offset);92==ch&&(escaped=!0)}}return null}function parseLinkLabel(text,start,offset,requireNonWS){for(let escaped=!1,pos=start+1,end=Math.min(text.length,pos+999);pos<end;pos++){let ch=text.charCodeAt(pos);if(escaped)escaped=!1;else{if(93==ch)return requireNonWS?!1:elt$jscomp$0(Type$jscomp$0.LinkLabel,start+offset,pos+1+offset);requireNonWS&&!space(ch)&&(requireNonWS=!1);if(91==ch)return!1;92==ch&&(escaped=!0)}}return null}function injectMarks(elements,
marks){if(!marks.length)return elements;if(!elements.length)return marks;elements=elements.slice();let eI=0;for(let mark of marks){for(;eI<elements.length&&elements[eI].to<mark.to;)eI++;eI<elements.length&&elements[eI].from<mark.from?(marks=elements[eI],marks instanceof Element&&(elements[eI]=new Element(marks.type,marks.from,marks.to,injectMarks(marks.children,[mark])))):elements.splice(eI++,0,mark)}return elements}function leftOverSpace(node,from,to){let ranges=[];for(let n=node.firstChild,pos=
from;;n=n.nextSibling){node=n?n.from:to;node>pos&&ranges.push({from:pos,to:node});if(!n)break;pos=n.to}return ranges}function parseRow(cx,line,startI=0,elts,offset=0){let count=0,first=!0,cellStart=-1,cellEnd=-1,esc=!1,parseCell=()=>{elts.push(cx.elt("TableCell",offset+cellStart,offset+cellEnd,cx.parser.parseInline(line.slice(cellStart,cellEnd),offset+cellStart)))};for(;startI<line.length;startI++){let next=line.charCodeAt(startI);if(124==next&&!esc)(!first||-1<cellStart)&&count++,first=!1,elts&&
(-1<cellStart&&parseCell(),elts.push(cx.elt("TableDelimiter",startI+offset,startI+offset+1))),cellStart=cellEnd=-1;else if(esc||32!=next&&9!=next)0>cellStart&&(cellStart=startI),cellEnd=startI+1;esc=!esc&&92==next}-1<cellStart&&(count++,elts&&parseCell());return count}function hasPipe(str,start){for(;start<str.length;start++){let next=str.charCodeAt(start);if(124==next)return!0;92==next&&start++}return!1}function parseSubSuper(ch,node,mark){return(cx,next$jscomp$0,pos)=>{if(next$jscomp$0!=ch||cx.char(pos+
1)==ch)return-1;next$jscomp$0=[cx.elt(mark,pos,pos+1)];for(let i=pos+1;i<cx.end;i++){let next=cx.char(i);if(next==ch)return cx.addElement(cx.elt(node,pos,i+1,next$jscomp$0.concat(cx.elt(mark,i,i+1))));92==next&&next$jscomp$0.push(cx.elt("Escape",i,i++ +2));if(space(next))break}return-1}}Object.defineProperty(exports,"__esModule",{value:!0});var common=require("module$node_modules$$lezer$common$dist$index_cjs"),highlight=require("module$node_modules$$lezer$highlight$dist$index_cjs");class CompositeBlock{constructor(type,
value,from,hash,end,children,positions){this.type=type;this.value=value;this.from=from;this.hash=hash;this.end=end;this.children=children;this.positions=positions;this.hashProp=[[common.NodeProp.contextHash,hash]]}static create(type,value,from,parentHash,end){return new CompositeBlock(type,value,from,parentHash+(parentHash<<8)+type+(value<<4)|0,end,[],[])}addChild(child,pos){child.prop(common.NodeProp.contextHash)!=this.hash&&(child=new common.Tree(child.type,child.children,child.positions,child.length,
this.hashProp));this.children.push(child);this.positions.push(pos)}toTree(nodeSet,end=this.end){let last=this.children.length-1;0<=last&&(end=Math.max(end,this.positions[last]+this.children[last].length+this.from));return(new common.Tree(nodeSet.types[this.type],this.children,this.positions,end-this.from)).balance({makeTree:(children,positions,length)=>new common.Tree(common.NodeType.none,children,positions,length,this.hashProp)})}}var Type$jscomp$0;(function(Type){Type[Type.Document=1]="Document";
Type[Type.CodeBlock=2]="CodeBlock";Type[Type.FencedCode=3]="FencedCode";Type[Type.Blockquote=4]="Blockquote";Type[Type.HorizontalRule=5]="HorizontalRule";Type[Type.BulletList=6]="BulletList";Type[Type.OrderedList=7]="OrderedList";Type[Type.ListItem=8]="ListItem";Type[Type.ATXHeading1=9]="ATXHeading1";Type[Type.ATXHeading2=10]="ATXHeading2";Type[Type.ATXHeading3=11]="ATXHeading3";Type[Type.ATXHeading4=12]="ATXHeading4";Type[Type.ATXHeading5=13]="ATXHeading5";Type[Type.ATXHeading6=14]="ATXHeading6";
Type[Type.SetextHeading1=15]="SetextHeading1";Type[Type.SetextHeading2=16]="SetextHeading2";Type[Type.HTMLBlock=17]="HTMLBlock";Type[Type.LinkReference=18]="LinkReference";Type[Type.Paragraph=19]="Paragraph";Type[Type.CommentBlock=20]="CommentBlock";Type[Type.ProcessingInstructionBlock=21]="ProcessingInstructionBlock";Type[Type.Escape=22]="Escape";Type[Type.Entity=23]="Entity";Type[Type.HardBreak=24]="HardBreak";Type[Type.Emphasis=25]="Emphasis";Type[Type.StrongEmphasis=26]="StrongEmphasis";Type[Type.Link=
27]="Link";Type[Type.Image=28]="Image";Type[Type.InlineCode=29]="InlineCode";Type[Type.HTMLTag=30]="HTMLTag";Type[Type.Comment=31]="Comment";Type[Type.ProcessingInstruction=32]="ProcessingInstruction";Type[Type.URL=33]="URL";Type[Type.HeaderMark=34]="HeaderMark";Type[Type.QuoteMark=35]="QuoteMark";Type[Type.ListMark=36]="ListMark";Type[Type.LinkMark=37]="LinkMark";Type[Type.EmphasisMark=38]="EmphasisMark";Type[Type.CodeMark=39]="CodeMark";Type[Type.CodeText=40]="CodeText";Type[Type.CodeInfo=41]="CodeInfo";
Type[Type.LinkTitle=42]="LinkTitle";Type[Type.LinkLabel=43]="LinkLabel"})(Type$jscomp$0||(Type$jscomp$0={}));class LeafBlock{constructor(start,content){this.start=start;this.content=content;this.marks=[];this.parsers=[]}}class Line{constructor(){this.text="";this.depth=this.basePos=this.baseIndent=0;this.markers=[];this.indent=this.pos=0;this.next=-1}forward(){this.basePos>this.pos&&this.forwardInner()}forwardInner(){let newPos=this.skipSpace(this.basePos);this.indent=this.countIndent(newPos,this.pos,
this.indent);this.pos=newPos;this.next=newPos==this.text.length?-1:this.text.charCodeAt(newPos)}skipSpace(from){return skipSpace(this.text,from)}reset(text){this.text=text;this.baseIndent=this.basePos=this.pos=this.indent=0;this.forwardInner();for(this.depth=1;this.markers.length;)this.markers.pop()}moveBase(to){this.basePos=to;this.baseIndent=this.countIndent(to,this.pos,this.indent)}moveBaseColumn(indent){this.baseIndent=indent;this.basePos=this.findColumn(indent)}addMarker(elt){this.markers.push(elt)}countIndent(to,
from=0,indent=0){for(;from<to;from++)indent+=9==this.text.charCodeAt(from)?4-indent%4:1;return indent}findColumn(goal){let i=0;for(let indent=0;i<this.text.length&&indent<goal;i++)indent+=9==this.text.charCodeAt(i)?4-indent%4:1;return i}scrub(){if(!this.baseIndent)return this.text;let result="";for(let i=0;i<this.basePos;i++)result+=" ";return result+this.text.slice(this.basePos)}}global={[Type$jscomp$0.Blockquote](bl,cx,line){if(62!=line.next)return!1;line.markers.push(elt$jscomp$0(Type$jscomp$0.QuoteMark,
cx.lineStart+line.pos,cx.lineStart+line.pos+1));line.moveBase(line.pos+(space(line.text.charCodeAt(line.pos+1))?2:1));bl.end=cx.lineStart+line.text.length;return!0},[Type$jscomp$0.ListItem](bl,_cx,line){if(line.indent<line.baseIndent+bl.value&&-1<line.next)return!1;line.moveBaseColumn(line.baseIndent+bl.value);return!0},[Type$jscomp$0.OrderedList]:skipForList,[Type$jscomp$0.BulletList]:skipForList,[Type$jscomp$0.Document](){return!0}};const EmptyLine=/^[ \t]*$/,CommentEnd=/--\x3e/,ProcessingEnd=/\?>/,
HTMLBlockStyle=[[/^<(?:script|pre|style)(?:\s|>|$)/i,/<\/(?:script|pre|style)>/i],[/^\s*\x3c!--/,CommentEnd],[/^\s*<\?/,ProcessingEnd],[/^\s*<![A-Z]/,/>/],[/^\s*<!\[CDATA\[/,/\]\]>/],[/^\s*<\/?(?:address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul)(?:\s|\/?>|$)/i,
EmptyLine],[/^\s*(?:<\/[a-z][\w-]*\s*>|<[a-z][\w-]*(\s+[a-z:_][\w-.]*(?:\s*=\s*(?:[^\s"'=<>`]+|'[^']*'|"[^"]*"))?)*\s*>)\s*$/i,EmptyLine]],DefaultBlockParsers={LinkReference:void 0,IndentedCode(cx,line){let base=line.baseIndent+4;if(line.indent<base)return!1;var start=line.findColumn(base);start=cx.lineStart+start;let to=cx.lineStart+line.text.length,marks=[],pendingMarks=[];for(addCodeText(marks,start,to);cx.nextLine()&&line.depth>=cx.stack.length;)if(line.pos==line.text.length){addCodeText(pendingMarks,
cx.lineStart-1,cx.lineStart);for(let m of line.markers)pendingMarks.push(m)}else if(line.indent<base)break;else{if(pendingMarks.length){for(let m of pendingMarks)m.type==Type$jscomp$0.CodeText?addCodeText(marks,m.from,m.to):marks.push(m);pendingMarks=[]}addCodeText(marks,cx.lineStart-1,cx.lineStart);for(let m of line.markers)marks.push(m);to=cx.lineStart+line.text.length;let codeStart=cx.lineStart+line.findColumn(line.baseIndent+4);codeStart<to&&addCodeText(marks,codeStart,to)}pendingMarks.length&&
(pendingMarks=pendingMarks.filter(m=>m.type!=Type$jscomp$0.CodeText),pendingMarks.length&&(line.markers=pendingMarks.concat(line.markers)));cx.addNode(cx.buffer.writeElements(marks,-start).finish(Type$jscomp$0.CodeBlock,to-start),start);return!0},FencedCode(cx,line){var fenceEnd=isFencedCode(line);if(0>fenceEnd)return!1;let from=cx.lineStart+line.pos,ch=line.next,len=fenceEnd-line.pos;var infoFrom=line.skipSpace(fenceEnd),infoTo=skipSpaceBack(line.text,line.text.length,infoFrom);fenceEnd=[elt$jscomp$0(Type$jscomp$0.CodeMark,
from,from+len)];infoFrom<infoTo&&fenceEnd.push(elt$jscomp$0(Type$jscomp$0.CodeInfo,cx.lineStart+infoFrom,cx.lineStart+infoTo));for(infoFrom=!0;cx.nextLine()&&line.depth>=cx.stack.length;infoFrom=!1){infoTo=line.pos;if(4>line.indent-line.baseIndent)for(;infoTo<line.text.length&&line.text.charCodeAt(infoTo)==ch;)infoTo++;if(infoTo-line.pos>=len&&line.skipSpace(infoTo)==line.text.length){for(let m of line.markers)fenceEnd.push(m);fenceEnd.push(elt$jscomp$0(Type$jscomp$0.CodeMark,cx.lineStart+line.pos,
cx.lineStart+infoTo));cx.nextLine();break}else{infoFrom||addCodeText(fenceEnd,cx.lineStart-1,cx.lineStart);for(let m of line.markers)fenceEnd.push(m);infoFrom=cx.lineStart+line.basePos;infoTo=cx.lineStart+line.text.length;infoFrom<infoTo&&addCodeText(fenceEnd,infoFrom,infoTo)}}cx.addNode(cx.buffer.writeElements(fenceEnd,-from).finish(Type$jscomp$0.FencedCode,cx.prevLineEnd()-from),from);return!0},Blockquote(cx,line){let size=62!=line.next?-1:32==line.text.charCodeAt(line.pos+1)?2:1;if(0>size)return!1;
cx.startContext(Type$jscomp$0.Blockquote,line.pos);cx.addNode(Type$jscomp$0.QuoteMark,cx.lineStart+line.pos,cx.lineStart+line.pos+1);line.moveBase(line.pos+size);return null},HorizontalRule(cx,line){if(0>isHorizontalRule(line,cx,!1))return!1;line=cx.lineStart+line.pos;cx.nextLine();cx.addNode(Type$jscomp$0.HorizontalRule,line);return!0},BulletList(cx,line){let size=isBulletList(line,cx,!1);if(0>size)return!1;cx.block.type!=Type$jscomp$0.BulletList&&cx.startContext(Type$jscomp$0.BulletList,line.basePos,
line.next);let newBase=getListIndent(line,line.pos+1);cx.startContext(Type$jscomp$0.ListItem,line.basePos,newBase-line.baseIndent);cx.addNode(Type$jscomp$0.ListMark,cx.lineStart+line.pos,cx.lineStart+line.pos+size);line.moveBaseColumn(newBase);return null},OrderedList(cx,line){let size=isOrderedList(line,cx,!1);if(0>size)return!1;cx.block.type!=Type$jscomp$0.OrderedList&&cx.startContext(Type$jscomp$0.OrderedList,line.basePos,line.text.charCodeAt(line.pos+size-1));let newBase=getListIndent(line,line.pos+
size);cx.startContext(Type$jscomp$0.ListItem,line.basePos,newBase-line.baseIndent);cx.addNode(Type$jscomp$0.ListMark,cx.lineStart+line.pos,cx.lineStart+line.pos+size);line.moveBaseColumn(newBase);return null},ATXHeading(cx,line){let size=isAtxHeading(line);if(0>size)return!1;let off=line.pos,from=cx.lineStart+off,endOfSpace=skipSpaceBack(line.text,line.text.length,off),after=endOfSpace;for(;after>off&&line.text.charCodeAt(after-1)==line.next;)after--;after!=endOfSpace&&after!=off&&space(line.text.charCodeAt(after-
1))||(after=line.text.length);let buf=cx.buffer.write(Type$jscomp$0.HeaderMark,0,size).writeElements(cx.parser.parseInline(line.text.slice(off+size+1,after),from+size+1),-from);after<line.text.length&&buf.write(Type$jscomp$0.HeaderMark,after-off,endOfSpace-off);line=buf.finish(Type$jscomp$0.ATXHeading1-1+size,line.text.length-off);cx.nextLine();cx.addNode(line,from);return!0},HTMLBlock(cx,line){var type=isHTMLBlock(line,cx,!1);if(0>type)return!1;let from=cx.lineStart+line.pos,end=HTMLBlockStyle[type][1];
type=[];let trailing=end!=EmptyLine;for(;!end.test(line.text)&&cx.nextLine();){if(line.depth<cx.stack.length){trailing=!1;break}for(var m of line.markers)type.push(m)}trailing&&cx.nextLine();line=end==CommentEnd?Type$jscomp$0.CommentBlock:end==ProcessingEnd?Type$jscomp$0.ProcessingInstructionBlock:Type$jscomp$0.HTMLBlock;m=cx.prevLineEnd();cx.addNode(cx.buffer.writeElements(type,-from).finish(line,m-from),from);return!0},SetextHeading:void 0};class LinkReferenceParser{constructor(leaf){this.stage=
0;this.elts=[];this.pos=0;this.start=leaf.start;this.advance(leaf.content)}nextLine(cx,line,leaf){if(-1==this.stage)return!1;line=leaf.content+"\n"+line.scrub();let finish=this.advance(line);return-1<finish&&finish<line.length?this.complete(cx,leaf,finish):!1}finish(cx,leaf){return 2!=this.stage&&3!=this.stage||skipSpace(leaf.content,this.pos)!=leaf.content.length?!1:this.complete(cx,leaf,leaf.content.length)}complete(cx,leaf,len){cx.addLeafElement(leaf,elt$jscomp$0(Type$jscomp$0.LinkReference,this.start,
this.start+len,this.elts));return!0}nextStage(elt){if(elt)return this.pos=elt.to-this.start,this.elts.push(elt),this.stage++,!0;!1===elt&&(this.stage=-1);return!1}advance(content){for(;;){if(-1==this.stage)return-1;if(0==this.stage){if(!this.nextStage(parseLinkLabel(content,this.pos,this.start,!0)))return-1;if(58!=content.charCodeAt(this.pos))return this.stage=-1;this.elts.push(elt$jscomp$0(Type$jscomp$0.LinkMark,this.pos+this.start,this.pos+this.start+1));this.pos++}else if(1==this.stage){if(!this.nextStage(parseURL(content,
skipSpace(content,this.pos),this.start)))return-1}else{if(2==this.stage){var skip=skipSpace(content,this.pos);let end=0;if(skip>this.pos&&(skip=parseLinkTitle(content,skip,this.start))){let titleEnd=lineEnd(content,skip.to-this.start);0<titleEnd&&(this.nextStage(skip),end=titleEnd)}end||(end=lineEnd(content,this.pos));return 0<end&&end<content.length?end:-1}return lineEnd(content,this.pos)}}}}class SetextHeadingParser{nextLine(cx,line,leaf){let underline=line.depth<cx.stack.length?-1:isSetextUnderline(line),
next=line.next;if(0>underline)return!1;line=elt$jscomp$0(Type$jscomp$0.HeaderMark,cx.lineStart+line.pos,cx.lineStart+underline);cx.nextLine();cx.addLeafElement(leaf,elt$jscomp$0(61==next?Type$jscomp$0.SetextHeading1:Type$jscomp$0.SetextHeading2,leaf.start,cx.prevLineEnd(),[...cx.parser.parseInline(leaf.content,leaf.start),line]));return!0}finish(){return!1}}const DefaultLeafBlocks={LinkReference(_,leaf){return 91==leaf.content.charCodeAt(0)?new LinkReferenceParser(leaf):null},SetextHeading(){return new SetextHeadingParser}},
scanLineResult={text:"",end:0};class BlockContext{constructor(parser,input,fragments,ranges){this.parser=parser;this.input=input;this.ranges=ranges;this.line=new Line;this.atEnd=!1;this.dontInject=new Set;this.stoppedAt=null;this.rangeI=0;this.to=ranges[ranges.length-1].to;this.lineStart=this.absoluteLineStart=this.absoluteLineEnd=ranges[0].from;this.block=CompositeBlock.create(Type$jscomp$0.Document,0,this.lineStart,0,0);this.stack=[this.block];this.fragments=fragments.length?new FragmentCursor(fragments,
input):null;this.readLine()}get parsedPos(){return this.absoluteLineStart}advance(){if(null!=this.stoppedAt&&this.absoluteLineStart>this.stoppedAt)return this.finish();let {line}=this;for(;;){for(;line.depth<this.stack.length;)this.finishContext();for(var mark of line.markers)this.addNode(mark.type,mark.from,mark.to);if(line.pos<line.text.length)break;if(!this.nextLine())return this.finish()}if(this.fragments&&this.reuseFragment(line.basePos))return null;a:for(;;){for(var type of this.parser.blockParsers)if(type&&
(mark=type(this,line),0!=mark)){if(1==mark)return null;line.forward();continue a}break}type=new LeafBlock(this.lineStart+line.pos,line.text.slice(line.pos));for(let parse of this.parser.leafBlockParsers)parse&&(mark=parse(this,type))&&type.parsers.push(mark);a:for(;this.nextLine()&&line.pos!=line.text.length;){if(line.indent<line.baseIndent+4)for(let stop of this.parser.endLeafBlock)if(stop(this,line,type))break a;for(let parser of type.parsers)if(parser.nextLine(this,line,type))return null;type.content+=
"\n"+line.scrub();for(let m of line.markers)type.marks.push(m)}this.finishLeaf(type);return null}stopAt(pos){if(null!=this.stoppedAt&&this.stoppedAt<pos)throw new RangeError("Can't move stoppedAt forward");this.stoppedAt=pos}reuseFragment(start){if(!this.fragments.moveTo(this.absoluteLineStart+start,this.absoluteLineStart)||!this.fragments.matches(this.block.hash))return!1;start=this.fragments.takeNodes(this);if(!start)return!1;let withoutGaps=start,end=this.absoluteLineStart+start;for(let i=1;i<
this.ranges.length;i++){let gapFrom=this.ranges[i-1].to,gapTo=this.ranges[i].from;gapFrom>=this.lineStart&&gapTo<end&&(withoutGaps-=gapTo-gapFrom)}this.lineStart+=withoutGaps;this.absoluteLineStart+=start;this.moveRangeI();this.absoluteLineStart<this.to?(this.lineStart++,this.absoluteLineStart++):this.atEnd=!0;this.readLine();return!0}get depth(){return this.stack.length}parentType(depth=this.depth-1){return this.parser.nodeSet.types[this.stack[depth].type]}nextLine(){this.lineStart+=this.line.text.length;
if(this.absoluteLineEnd>=this.to)return this.absoluteLineStart=this.absoluteLineEnd,this.atEnd=!0,this.readLine(),!1;this.lineStart++;this.absoluteLineStart=this.absoluteLineEnd+1;this.moveRangeI();this.readLine();return!0}moveRangeI(){for(;this.rangeI<this.ranges.length-1&&this.absoluteLineStart>=this.ranges[this.rangeI].to;)this.rangeI++,this.absoluteLineStart=Math.max(this.absoluteLineStart,this.ranges[this.rangeI].from)}scanLine(start){scanLineResult.end=start;if(start>=this.to)scanLineResult.text=
"";else if(scanLineResult.text=this.lineChunkAt(start),scanLineResult.end+=scanLineResult.text.length,1<this.ranges.length){start=this.absoluteLineStart;let rangeI=this.rangeI;for(;this.ranges[rangeI].to<scanLineResult.end;){rangeI++;let nextFrom=this.ranges[rangeI].from,after=this.lineChunkAt(nextFrom);scanLineResult.end=nextFrom+after.length;scanLineResult.text=scanLineResult.text.slice(0,this.ranges[rangeI-1].to-start)+after;start=scanLineResult.end-scanLineResult.text.length}}return scanLineResult}readLine(){let {line}=
this,{text,end}=this.scanLine(this.absoluteLineStart);this.absoluteLineEnd=end;for(line.reset(text);line.depth<this.stack.length;line.depth++){let cx=this.stack[line.depth],handler=this.parser.skipContextMarkup[cx.type];if(!handler)throw Error("Unhandled block context "+Type$jscomp$0[cx.type]);if(!handler(cx,this,line))break;line.forward()}}lineChunkAt(pos){var next=this.input.chunk(pos);if(this.input.lineChunks)next="\n"==next?"":next;else{let eol=next.indexOf("\n");next=0>eol?next:next.slice(0,
eol)}return pos+next.length>this.to?next.slice(0,this.to-pos):next}prevLineEnd(){return this.atEnd?this.lineStart:this.lineStart-1}startContext(type,start,value=0){this.block=CompositeBlock.create(type,value,this.lineStart+start,this.block.hash,this.lineStart+this.line.text.length);this.stack.push(this.block)}startComposite(type,start,value=0){this.startContext(this.parser.getNodeType(type),start,value)}addNode(block,from,to){"number"==typeof block&&(block=new common.Tree(this.parser.nodeSet.types[block],
none,none,(null!==to&&void 0!==to?to:this.prevLineEnd())-from));this.block.addChild(block,from-this.block.from)}addElement(elt){this.block.addChild(elt.toTree(this.parser.nodeSet),elt.from-this.block.from)}addLeafElement(leaf,elt){this.addNode(this.buffer.writeElements(injectMarks(elt.children,leaf.marks),-elt.from).finish(elt.type,elt.to-elt.from),elt.from)}finishContext(){let cx=this.stack.pop(),top=this.stack[this.stack.length-1];top.addChild(cx.toTree(this.parser.nodeSet),cx.from-top.from);this.block=
top}finish(){for(;1<this.stack.length;)this.finishContext();return this.addGaps(this.block.toTree(this.parser.nodeSet,this.lineStart))}addGaps(tree){return 1<this.ranges.length?injectGaps(this.ranges,0,tree.topNode,this.ranges[0].from,this.dontInject):tree}finishLeaf(leaf){for(var parser of leaf.parsers)if(parser.finish(this,leaf))return;parser=injectMarks(this.parser.parseInline(leaf.content,leaf.start),leaf.marks);this.addNode(this.buffer.writeElements(parser,-leaf.start).finish(Type$jscomp$0.Paragraph,
leaf.content.length),leaf.start)}elt(type,from,to,children){return"string"==typeof type?elt$jscomp$0(this.parser.getNodeType(type),from,to,children):new TreeElement(type,from)}get buffer(){return new Buffer(this.parser.nodeSet)}}class MarkdownParser extends common.Parser{constructor(nodeSet,blockParsers,leafBlockParsers,blockNames,endLeafBlock,skipContextMarkup,inlineParsers,inlineNames,wrappers){super();this.nodeSet=nodeSet;this.blockParsers=blockParsers;this.leafBlockParsers=leafBlockParsers;this.blockNames=
blockNames;this.endLeafBlock=endLeafBlock;this.skipContextMarkup=skipContextMarkup;this.inlineParsers=inlineParsers;this.inlineNames=inlineNames;this.wrappers=wrappers;this.nodeTypes=Object.create(null);for(let t of nodeSet.types)this.nodeTypes[t.name]=t.id}createParse(input,fragments,ranges){let parse=new BlockContext(this,input,fragments,ranges);for(let w of this.wrappers)parse=w(parse,input,fragments,ranges);return parse}configure(spec$jscomp$1){spec$jscomp$1=resolveConfig(spec$jscomp$1);if(!spec$jscomp$1)return this;
let {nodeSet,skipContextMarkup}=this,blockParsers=this.blockParsers.slice(),leafBlockParsers=this.leafBlockParsers.slice(),blockNames=this.blockNames.slice(),inlineParsers=this.inlineParsers.slice(),inlineNames=this.inlineNames.slice(),endLeafBlock=this.endLeafBlock.slice(),wrappers=this.wrappers;if(nonEmpty(spec$jscomp$1.defineNodes)){skipContextMarkup=Object.assign({},skipContextMarkup);let nodeTypes=nodeSet.types.slice();var styles;for(var s of spec$jscomp$1.defineNodes){let {name,block,composite,
style}="string"==typeof s?{name:s}:s;if(nodeTypes.some(t=>t.name==name))continue;composite&&(skipContextMarkup[nodeTypes.length]=(bl,cx,line)=>composite(cx,line,bl.value));let id=nodeTypes.length,group=composite?["Block","BlockContext"]:block?id>=Type$jscomp$0.ATXHeading1&&id<=Type$jscomp$0.SetextHeading2?["Block","LeafBlock","Heading"]:["Block","LeafBlock"]:void 0;nodeTypes.push(common.NodeType.define({id,name,props:group&&[[common.NodeProp.group,group]]}));style&&(styles||(styles={}),Array.isArray(style)||
style instanceof highlight.Tag?styles[name]=style:Object.assign(styles,style))}nodeSet=new common.NodeSet(nodeTypes);styles&&(nodeSet=nodeSet.extend(highlight.styleTags(styles)))}nonEmpty(spec$jscomp$1.props)&&(nodeSet=nodeSet.extend(...spec$jscomp$1.props));if(nonEmpty(spec$jscomp$1.remove))for(var rm of spec$jscomp$1.remove)styles=this.blockNames.indexOf(rm),s=this.inlineNames.indexOf(rm),-1<styles&&(blockParsers[styles]=leafBlockParsers[styles]=void 0),-1<s&&(inlineParsers[s]=void 0);if(nonEmpty(spec$jscomp$1.parseBlock))for(var spec$jscomp$0 of spec$jscomp$1.parseBlock)rm=
blockNames.indexOf(spec$jscomp$0.name),-1<rm?(blockParsers[rm]=spec$jscomp$0.parse,leafBlockParsers[rm]=spec$jscomp$0.leaf):(rm=spec$jscomp$0.before?findName(blockNames,spec$jscomp$0.before):spec$jscomp$0.after?findName(blockNames,spec$jscomp$0.after)+1:blockNames.length-1,blockParsers.splice(rm,0,spec$jscomp$0.parse),leafBlockParsers.splice(rm,0,spec$jscomp$0.leaf),blockNames.splice(rm,0,spec$jscomp$0.name)),spec$jscomp$0.endLeaf&&endLeafBlock.push(spec$jscomp$0.endLeaf);if(nonEmpty(spec$jscomp$1.parseInline))for(let spec of spec$jscomp$1.parseInline)spec$jscomp$0=
inlineNames.indexOf(spec.name),-1<spec$jscomp$0?inlineParsers[spec$jscomp$0]=spec.parse:(spec$jscomp$0=spec.before?findName(inlineNames,spec.before):spec.after?findName(inlineNames,spec.after)+1:inlineNames.length-1,inlineParsers.splice(spec$jscomp$0,0,spec.parse),inlineNames.splice(spec$jscomp$0,0,spec.name));spec$jscomp$1.wrap&&(wrappers=wrappers.concat(spec$jscomp$1.wrap));return new MarkdownParser(nodeSet,blockParsers,leafBlockParsers,blockNames,endLeafBlock,skipContextMarkup,inlineParsers,inlineNames,
wrappers)}getNodeType(name){let found=this.nodeTypes[name];if(null==found)throw new RangeError(`Unknown node type '${name}'`);return found}parseInline(text,offset){text=new InlineContext(this,text,offset);a:for(;offset<text.end;){let next=text.char(offset);for(let token of this.inlineParsers)if(token){let result=token(text,next,offset);if(0<=result){offset=result;continue a}}offset++}return text.resolveMarkers(0)}}require=[common.NodeType.none];for(let i=1,name;name=Type$jscomp$0[i];i++)require[i]=
common.NodeType.define({id:i,name,props:i>=Type$jscomp$0.Escape?[]:[[common.NodeProp.group,i in global?["Block","BlockContext"]:["Block","LeafBlock"]]]});const none=[];class Buffer{constructor(nodeSet){this.nodeSet=nodeSet;this.content=[];this.nodes=[]}write(type,from,to,children=0){this.content.push(type,from,to,4+4*children);return this}writeElements(elts,offset=0){for(let e of elts)e.writeTo(this,offset);return this}finish(type,length){return common.Tree.build({buffer:this.content,nodeSet:this.nodeSet,
reused:this.nodes,topID:type,length})}}class Element{constructor(type,from,to,children=none){this.type=type;this.from=from;this.to=to;this.children=children}writeTo(buf,offset){let startOff=buf.content.length;buf.writeElements(this.children,offset);buf.content.push(this.type,this.from+offset,this.to+offset,buf.content.length+4-startOff)}toTree(nodeSet){return(new Buffer(nodeSet)).writeElements(this.children,-this.from).finish(this.type,this.to-this.from)}}class TreeElement{constructor(tree,from){this.tree=
tree;this.from=from}get to(){return this.from+this.tree.length}get type(){return this.tree.type.id}get children(){return none}writeTo(buf,offset){buf.nodes.push(this.tree);buf.content.push(buf.nodes.length-1,this.from+offset,this.to+offset,-1)}toTree(){return this.tree}}const EmphasisUnderscore={resolve:"Emphasis",mark:"EmphasisMark"},EmphasisAsterisk={resolve:"Emphasis",mark:"EmphasisMark"},LinkStart={},ImageStart={};class InlineDelimiter{constructor(type,from,to,side){this.type=type;this.from=from;
this.to=to;this.side=side}}let Punctuation=/[!"#$%&'()*+,\-.\/:;<=>?@\[\\\]^_`{|}~\xA1\u2010-\u2027]/;try{Punctuation=/[\p{Pc}|\p{Pd}|\p{Pe}|\p{Pf}|\p{Pi}|\p{Po}|\p{Ps}]/u}catch(_){}const DefaultInline={Escape(cx,next,start){if(92!=next||start==cx.end-1)return-1;next=cx.char(start+1);for(let i=0;32>i;i++)if("!\"#$%\x26'()*+,-./:;\x3c\x3d\x3e?@[\\]^_`{|}~".charCodeAt(i)==next)return cx.append(elt$jscomp$0(Type$jscomp$0.Escape,start,start+2));return-1},Entity(cx,next,start){return 38!=next?-1:(next=
/^(?:#\d+|#x[a-f\d]+|\w+);/i.exec(cx.slice(start+1,start+31)))?cx.append(elt$jscomp$0(Type$jscomp$0.Entity,start,start+1+next[0].length)):-1},InlineCode(cx,next,start){if(96!=next||start&&96==cx.char(start-1))return-1;for(next=start+1;next<cx.end&&96==cx.char(next);)next++;let size=next-start,curSize=0;for(;next<cx.end;next++)if(96==cx.char(next)){if(curSize++,curSize==size&&96!=cx.char(next+1))return cx.append(elt$jscomp$0(Type$jscomp$0.InlineCode,start,next+1,[elt$jscomp$0(Type$jscomp$0.CodeMark,
start,start+size),elt$jscomp$0(Type$jscomp$0.CodeMark,next+1-size,next+1)]))}else curSize=0;return-1},HTMLTag(cx,next,start){if(60!=next||start==cx.end-1)return-1;next=cx.slice(start+1,cx.end);var url=/^(?:[a-z][-\w+.]+:[^\s>]+|[a-z\d.!#$%&'*+/=?^_`{|}~-]+@[a-z\d](?:[a-z\d-]{0,61}[a-z\d])?(?:\.[a-z\d](?:[a-z\d-]{0,61}[a-z\d])?)*)>/i.exec(next);return url?cx.append(elt$jscomp$0(Type$jscomp$0.URL,start,start+1+url[0].length)):(url=/^!--[^>](?:-[^-]|[^-])*?--\x3e/i.exec(next))?cx.append(elt$jscomp$0(Type$jscomp$0.Comment,
start,start+1+url[0].length)):(url=/^\?[^]*?\?>/.exec(next))?cx.append(elt$jscomp$0(Type$jscomp$0.ProcessingInstruction,start,start+1+url[0].length)):(next=/^(?:![A-Z][^]*?>|!\[CDATA\[[^]*?\]\]>|\/\s*[a-zA-Z][\w-]*\s*>|\s*[a-zA-Z][\w-]*(\s+[a-zA-Z:_][\w-.:]*(?:\s*=\s*(?:[^\s"'=<>`]+|'[^']*'|"[^"]*"))?)*\s*(\/\s*)?>)/.exec(next))?cx.append(elt$jscomp$0(Type$jscomp$0.HTMLTag,start,start+1+next[0].length)):-1},Emphasis(cx,next,start){if(95!=next&&42!=next)return-1;let pos=start+1;for(;cx.char(pos)==
next;)pos++;var before=cx.slice(start-1,start),after=cx.slice(pos,pos+1);let pBefore=Punctuation.test(before),pAfter=Punctuation.test(after);before=/\s|^$/.test(before);let sAfter=/\s|^$/.test(after);after=!sAfter&&(!pAfter||before||pBefore);before=!before&&(!pBefore||sAfter||pAfter);return cx.append(new InlineDelimiter(95==next?EmphasisUnderscore:EmphasisAsterisk,start,pos,(!after||42!=next&&before&&!pBefore?0:1)|(!before||42!=next&&after&&!pAfter?0:2)))},HardBreak(cx,next,start){if(92==next&&10==
cx.char(start+1))return cx.append(elt$jscomp$0(Type$jscomp$0.HardBreak,start,start+2));if(32==next){for(next=start+1;32==cx.char(next);)next++;if(10==cx.char(next)&&next>=start+2)return cx.append(elt$jscomp$0(Type$jscomp$0.HardBreak,start,next+1))}return-1},Link(cx,next,start){return 91==next?cx.append(new InlineDelimiter(LinkStart,start,start+1,1)):-1},Image(cx,next,start){return 33==next&&91==cx.char(start+1)?cx.append(new InlineDelimiter(ImageStart,start,start+2,1)):-1},LinkEnd(cx,next$jscomp$0,
start$jscomp$0){if(93!=next$jscomp$0)return-1;for(next$jscomp$0=cx.parts.length-1;0<=next$jscomp$0;next$jscomp$0--){var part=cx.parts[next$jscomp$0];if(part instanceof InlineDelimiter&&(part.type==LinkStart||part.type==ImageStart)){if(!part.side||cx.skipSpace(part.to)==start$jscomp$0&&!/[(\[]/.test(cx.slice(start$jscomp$0+1,start$jscomp$0+2))){cx.parts[next$jscomp$0]=null;break}var content=cx.takeContent(next$jscomp$0),JSCompiler_temp_const=cx.parts,JSCompiler_temp_const$jscomp$0=next$jscomp$0;let title=
void 0;var JSCompiler_inline_result=cx;var type=part.type==LinkStart?Type$jscomp$0.Link:Type$jscomp$0.Image,start=part.from,startPos=start$jscomp$0+1;let {text}=JSCompiler_inline_result;var next=JSCompiler_inline_result.char(startPos);start$jscomp$0=startPos;content.unshift(elt$jscomp$0(Type$jscomp$0.LinkMark,start,start+(type==Type$jscomp$0.Image?2:1)));content.push(elt$jscomp$0(Type$jscomp$0.LinkMark,startPos-1,startPos));if(40==next){next=JSCompiler_inline_result.skipSpace(startPos+1);let dest=
parseURL(text,next-JSCompiler_inline_result.offset,JSCompiler_inline_result.offset);dest&&(next=JSCompiler_inline_result.skipSpace(dest.to),(title=parseLinkTitle(text,next-JSCompiler_inline_result.offset,JSCompiler_inline_result.offset))&&(next=JSCompiler_inline_result.skipSpace(title.to)));41==JSCompiler_inline_result.char(next)&&(content.push(elt$jscomp$0(Type$jscomp$0.LinkMark,startPos,startPos+1)),start$jscomp$0=next+1,dest&&content.push(dest),title&&content.push(title),content.push(elt$jscomp$0(Type$jscomp$0.LinkMark,
next,start$jscomp$0)))}else 91==next&&(JSCompiler_inline_result=parseLinkLabel(text,startPos-JSCompiler_inline_result.offset,JSCompiler_inline_result.offset,!1))&&(content.push(JSCompiler_inline_result),start$jscomp$0=JSCompiler_inline_result.to);JSCompiler_inline_result=elt$jscomp$0(type,start,start$jscomp$0,content);JSCompiler_temp_const=JSCompiler_temp_const[JSCompiler_temp_const$jscomp$0]=JSCompiler_inline_result;if(part.type==LinkStart)for(part=0;part<next$jscomp$0;part++)JSCompiler_temp_const$jscomp$0=
cx.parts[part],JSCompiler_temp_const$jscomp$0 instanceof InlineDelimiter&&JSCompiler_temp_const$jscomp$0.type==LinkStart&&(JSCompiler_temp_const$jscomp$0.side=0);return JSCompiler_temp_const.to}}return-1}};class InlineContext{constructor(parser,text,offset){this.parser=parser;this.text=text;this.offset=offset;this.parts=[]}char(pos){return pos>=this.end?-1:this.text.charCodeAt(pos-this.offset)}get end(){return this.offset+this.text.length}slice(from,to){return this.text.slice(from-this.offset,to-
this.offset)}append(elt){this.parts.push(elt);return elt.to}addDelimiter(type,from,to,open,close){return this.append(new InlineDelimiter(type,from,to,(open?1:0)|(close?2:0)))}addElement(elt){return this.append(elt)}resolveMarkers(from){for(var i=from;i<this.parts.length;i++){var close=this.parts[i];if(!(close instanceof InlineDelimiter&&close.type.resolve&&close.side&2))continue;let emp=close.type==EmphasisUnderscore||close.type==EmphasisAsterisk;var closeSize=close.to-close.from;let open,j=i-1;for(;j>=
from;j--){var part=this.parts[j];if(part instanceof InlineDelimiter&&part.side&1&&part.type==close.type&&!(emp&&(close.side&1||part.side&2)&&0==(part.to-part.from+closeSize)%3&&((part.to-part.from)%3||closeSize%3))){open=part;break}}if(!open)continue;let type=close.type.resolve;var content=[];part=open.from;let end=close.to;emp&&(closeSize=Math.min(2,open.to-open.from,closeSize),part=open.to-closeSize,end=close.from+closeSize,type=1==closeSize?"Emphasis":"StrongEmphasis");open.type.mark&&content.push(this.elt(open.type.mark,
part,open.to));for(closeSize=j+1;closeSize<i;closeSize++)this.parts[closeSize]instanceof Element&&content.push(this.parts[closeSize]),this.parts[closeSize]=null;close.type.mark&&content.push(this.elt(close.type.mark,close.from,end));content=this.elt(type,part,end,content);this.parts[j]=emp&&open.from!=part?new InlineDelimiter(open.type,open.from,part,open.side):null;(this.parts[i]=emp&&close.to!=end?new InlineDelimiter(close.type,end,close.to,close.side):null)?this.parts.splice(i,0,content):this.parts[i]=
content}for(i=[];from<this.parts.length;from++)close=this.parts[from],close instanceof Element&&i.push(close);return i}findOpeningDelimiter(type){for(let i=this.parts.length-1;0<=i;i--){let part=this.parts[i];if(part instanceof InlineDelimiter&&part.type==type)return i}return null}takeContent(startIndex){let content=this.resolveMarkers(startIndex);this.parts.length=startIndex;return content}skipSpace(from){return skipSpace(this.text,from-this.offset)+this.offset}elt(type,from,to,children){return"string"==
typeof type?elt$jscomp$0(this.parser.getNodeType(type),from,to,children):new TreeElement(type,from)}}const NotLast=[Type$jscomp$0.CodeBlock,Type$jscomp$0.ListItem,Type$jscomp$0.OrderedList,Type$jscomp$0.BulletList];class FragmentCursor{constructor(fragments,input){this.fragments=fragments;this.input=input;this.i=0;this.fragment=null;this.fragmentEnd=-1;this.cursor=null;fragments.length&&(this.fragment=fragments[this.i++])}nextFragment(){this.fragment=this.i<this.fragments.length?this.fragments[this.i++]:
null;this.cursor=null;this.fragmentEnd=-1}moveTo(pos,lineStart){for(;this.fragment&&this.fragment.to<=pos;)this.nextFragment();if(!this.fragment||this.fragment.from>(pos?pos-1:0))return!1;if(0>this.fragmentEnd){for(var end=this.fragment.to;0<end&&"\n"!=this.input.read(end-1,end);)end--;this.fragmentEnd=end?end-1:0}end=this.cursor;end||(end=this.cursor=this.fragment.tree.cursor(),end.firstChild());for(pos+=this.fragment.offset;end.to<=pos;)if(!end.parent())return!1;for(;;){if(end.from>=pos)return this.fragment.from<=
lineStart;if(!end.childAfter(pos))return!1}}matches(hash){let tree=this.cursor.tree;return tree&&tree.prop(common.NodeProp.contextHash)==hash}takeNodes(cx){let cur=this.cursor,off=this.fragment.offset,fragEnd=this.fragmentEnd-(this.fragment.openEnd?1:0),start=cx.absoluteLineStart,end=start,blockI=cx.block.children.length,prevEnd=end,prevI=blockI;for(;;){if(cur.to-off>fragEnd){if(cur.type.isAnonymous&&cur.firstChild())continue;break}cx.dontInject.add(cur.tree);cx.addNode(cur.tree,cur.from-off);cur.type.is("Block")&&
(0>NotLast.indexOf(cur.type.id)?(end=cur.to-off,blockI=cx.block.children.length):(end=prevEnd,blockI=prevI,prevEnd=cur.to-off,prevI=cx.block.children.length));if(!cur.nextSibling())break}for(;cx.block.children.length>blockI;)cx.block.children.pop(),cx.block.positions.pop();return end-start}}module=highlight.styleTags({"Blockquote/...":highlight.tags.quote,HorizontalRule:highlight.tags.contentSeparator,"ATXHeading1/... SetextHeading1/...":highlight.tags.heading1,"ATXHeading2/... SetextHeading2/...":highlight.tags.heading2,
"ATXHeading3/...":highlight.tags.heading3,"ATXHeading4/...":highlight.tags.heading4,"ATXHeading5/...":highlight.tags.heading5,"ATXHeading6/...":highlight.tags.heading6,"Comment CommentBlock":highlight.tags.comment,Escape:highlight.tags.escape,Entity:highlight.tags.character,"Emphasis/...":highlight.tags.emphasis,"StrongEmphasis/...":highlight.tags.strong,"Link/... Image/...":highlight.tags.link,"OrderedList/... BulletList/...":highlight.tags.list,"BlockQuote/...":highlight.tags.quote,"InlineCode CodeText":highlight.tags.monospace,
URL:highlight.tags.url,"HeaderMark HardBreak QuoteMark ListMark LinkMark EmphasisMark CodeMark":highlight.tags.processingInstruction,"CodeInfo LinkLabel":highlight.tags.labelName,LinkTitle:highlight.tags.string,Paragraph:highlight.tags.content});global=new MarkdownParser((new common.NodeSet(require)).extend(module),Object.keys(DefaultBlockParsers).map(n=>DefaultBlockParsers[n]),Object.keys(DefaultBlockParsers).map(n=>DefaultLeafBlocks[n]),Object.keys(DefaultBlockParsers),[(_,line)=>0<=isAtxHeading(line),
(_,line)=>0<=isFencedCode(line),(_,line)=>0<=(62!=line.next?-1:32==line.text.charCodeAt(line.pos+1)?2:1),(p,line)=>0<=isBulletList(line,p,!0),(p,line)=>0<=isOrderedList(line,p,!0),(p,line)=>0<=isHorizontalRule(line,p,!0),(p,line)=>0<=isHTMLBlock(line,p,!0)],global,Object.keys(DefaultInline).map(n=>DefaultInline[n]),Object.keys(DefaultInline),[]);const StrikethroughDelim={resolve:"Strikethrough",mark:"StrikethroughMark"};require={defineNodes:[{name:"Strikethrough",style:{"Strikethrough/...":highlight.tags.strikethrough}},
{name:"StrikethroughMark",style:highlight.tags.processingInstruction}],parseInline:[{name:"Strikethrough",parse(cx,next,pos){return 126!=next||126!=cx.char(pos+1)?-1:cx.addDelimiter(StrikethroughDelim,pos,pos+2,!0,!0)},after:"Emphasis"}]};const delimiterLine=/^\|?(\s*:?-+:?\s*\|)+(\s*:?-+:?\s*)?$/;class TableParser{constructor(){this.rows=null}nextLine(cx,line,leaf){if(null==this.rows){this.rows=!1;let lineText;if((45==line.next||58==line.next||124==line.next)&&delimiterLine.test(lineText=line.text.slice(line.pos))){let firstRow=
[];parseRow(cx,leaf.content,0,firstRow,leaf.start)==parseRow(cx,lineText,line.pos)&&(this.rows=[cx.elt("TableHeader",leaf.start,leaf.start+leaf.content.length,firstRow),cx.elt("TableDelimiter",cx.lineStart+line.pos,cx.lineStart+line.text.length)])}}else this.rows&&(leaf=[],parseRow(cx,line.text,line.pos,leaf,cx.lineStart),this.rows.push(cx.elt("TableRow",cx.lineStart+line.pos,cx.lineStart+line.text.length,leaf)));return!1}finish(cx,leaf){if(!this.rows)return!1;cx.addLeafElement(leaf,cx.elt("Table",
leaf.start,leaf.start+leaf.content.length,this.rows));return!0}}module={defineNodes:[{name:"Table",block:!0},{name:"TableHeader",style:{"TableHeader/...":highlight.tags.heading}},"TableRow",{name:"TableCell",style:highlight.tags.content},{name:"TableDelimiter",style:highlight.tags.processingInstruction}],parseBlock:[{name:"Table",leaf(_,leaf){return hasPipe(leaf.content,0)?new TableParser:null},endLeaf(cx,line,leaf){if(leaf.parsers.some(p=>p instanceof TableParser)||!hasPipe(line.text,line.basePos))return!1;
leaf=cx.scanLine(cx.absoluteLineEnd+1).text;return delimiterLine.test(leaf)&&parseRow(cx,line.text,line.basePos)==parseRow(cx,leaf,line.basePos)},before:"SetextHeading"}]};class TaskParser{nextLine(){return!1}finish(cx,leaf){cx.addLeafElement(leaf,cx.elt("Task",leaf.start,leaf.start+leaf.content.length,[cx.elt("TaskMarker",leaf.start,leaf.start+3),...cx.parser.parseInline(leaf.content.slice(3),leaf.start+3)]));return!0}}const TaskList={defineNodes:[{name:"Task",block:!0,style:highlight.tags.list},
{name:"TaskMarker",style:highlight.tags.atom}],parseBlock:[{name:"TaskList",leaf(cx,leaf){return/^\[[ xX]\]/.test(leaf.content)&&"ListItem"==cx.parentType().name?new TaskParser:null},after:"SetextHeading"}]},GFM=[module,TaskList,require],Superscript={defineNodes:[{name:"Superscript",style:highlight.tags.special(highlight.tags.content)},{name:"SuperscriptMark",style:highlight.tags.processingInstruction}],parseInline:[{name:"Superscript",parse:parseSubSuper(94,"Superscript","SuperscriptMark")}]},Subscript=
{defineNodes:[{name:"Subscript",style:highlight.tags.special(highlight.tags.content)},{name:"SubscriptMark",style:highlight.tags.processingInstruction}],parseInline:[{name:"Subscript",parse:parseSubSuper(126,"Subscript","SubscriptMark")}]},Emoji={defineNodes:[{name:"Emoji",style:highlight.tags.character}],parseInline:[{name:"Emoji",parse(cx,next,pos){let match;return 58==next&&(match=/^[a-zA-Z_0-9]+:/.exec(cx.slice(pos+1,cx.end)))?cx.addElement(cx.elt("Emoji",pos,pos+1+match[0].length)):-1}}]};exports.BlockContext=
BlockContext;exports.Element=Element;exports.Emoji=Emoji;exports.GFM=GFM;exports.InlineContext=InlineContext;exports.LeafBlock=LeafBlock;exports.Line=Line;exports.MarkdownParser=MarkdownParser;exports.Strikethrough=require;exports.Subscript=Subscript;exports.Superscript=Superscript;exports.Table=module;exports.TaskList=TaskList;exports.parseCode=function(config){let {codeParser,htmlParser}=config;return{wrap:common.parseMixed((node$jscomp$0,input)=>{let id=node$jscomp$0.type.id;if(codeParser&&(id==
Type$jscomp$0.CodeBlock||id==Type$jscomp$0.FencedCode)){let info="";id==Type$jscomp$0.FencedCode&&(node$jscomp$0=node$jscomp$0.node.getChild(Type$jscomp$0.CodeInfo))&&(info=input.read(node$jscomp$0.from,node$jscomp$0.to));if(input=codeParser(info))return{parser:input,overlay:node=>node.type.id==Type$jscomp$0.CodeText}}else if(htmlParser&&(id==Type$jscomp$0.HTMLBlock||id==Type$jscomp$0.HTMLTag))return{parser:htmlParser,overlay:leftOverSpace(node$jscomp$0.node,node$jscomp$0.from,node$jscomp$0.to)};
return null})}};exports.parser=global}
//# sourceMappingURL=module$node_modules$$lezer$markdown$dist$index_cjs.js.map
