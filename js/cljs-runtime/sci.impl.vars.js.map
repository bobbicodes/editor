{"version":3,"sources":["sci/impl/vars.cljc"],"mappings":"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,OAAAA,qCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UA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A,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA,OAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sCAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAA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","names":["sci$impl$vars$HasName$getName$dyn","x__4521__auto__","m__4522__auto__","sci.impl.vars/getName","goog/typeOf","m__4519__auto__","cljs.core/missing-protocol","sci.impl.vars/HasName","_","cljs.core/PROTOCOL_SENTINEL","this__4461__auto__","writer__4462__auto__","opt__4463__auto__","cljs.core/-write","sci.impl.vars/SciNamespace","sci.impl.vars/->SciNamespace","name","meta","sci.impl.vars/namespace?","x","sci.impl.vars/Frame","sci.impl.vars/->Frame","bindings","prev","sci.impl.vars/top-frame","sci.impl.vars/dvals","cljs.core/volatile!","cljs.core/deref","sci.impl.vars/get-thread-binding-frame","sci.impl.vars/TBox","sci.impl.vars/->TBox","thread","val","this","v","sci.impl.vars/clone-thread-binding-frame","f","sci.impl.vars/reset-thread-binding-frame","frame","cljs.core/vreset!","sci.impl.vars/dynamic-var?","and__4221__auto__","sci.impl.vars/var?","cljs.core/meta","sci$impl$vars$IVar$bindRoot$dyn","sci.impl.vars/bindRoot","sci$impl$vars$IVar$getRawRoot$dyn","sci.impl.vars/getRawRoot","sci$impl$vars$IVar$toSymbol$dyn","sci.impl.vars/toSymbol","sci$impl$vars$IVar$isMacro$dyn","sci.impl.vars/isMacro","sci$impl$vars$IVar$hasRoot$dyn","sci.impl.vars/hasRoot","sci$impl$vars$IVar$setThreadBound$dyn","sci.impl.vars/setThreadBound","sci$impl$vars$IVar$unbind$dyn","sci.impl.vars/unbind","sci.impl.vars/IVar","sci.impl.vars/push-thread-bindings","bmap","cljs.core.reduce","p__57929","vec__57930","cljs.core.nth","acc","var*","val*","js/Error","cljs.core.assoc","sci.impl.vars/pop-thread-bindings","temp__5751__auto__","sci.impl.vars/get-thread-bindings","ret","kvs","cljs.core/seq","vec__57944","tbox","cljs.core/first","tbox-val","cljs.core/next","sci.impl.vars/get-thread-binding","sci-var","temp__5753__auto__","sci.impl.vars/binding-conveyor-fn","y","z","args","cljs.core.apply","sci.impl.vars/throw-unbound-call-exception","the-var","unused__11876__auto__","self__","G__58006","args58004","cljs.core/aclone","sci.impl.vars/SciUnbound","sci.impl.vars/->SciUnbound","a","b","c","d","e","g","h","i","j","k","l","m","n","o","p","q","r","s","t","rest","sci.impl.vars/built-in-var?","var-meta","G__58218","args58099","sci.impl.vars/SciVar","sci.impl.vars/->SciVar","root","sym","thread-bound","or__4223__auto__","vm__57705__auto__","sci.impl.unrestrict/*unrestricted*","cljs.core/not","the-var__57706__auto__","ns__57707__auto__","ns-name__57708__auto__","name__57709__auto__","cljs.core.ex_info","sym-name","G__58137","cljs.core/name","cljs.core.symbol","G__58140","temp__5757__auto__","sci.impl.types/setVal","sci.impl.types/getVal","writer","opts","cljs.core/pr-writer","fexpr__58224","fexpr__58225","fexpr__58226","fexpr__58228","fexpr__58229","fexpr__58251","fexpr__58252","fexpr__58253","fexpr__58254","fexpr__58255","fexpr__58256","fexpr__58257","fexpr__58258","fexpr__58259","fexpr__58262","fexpr__58264","fexpr__58265","fexpr__58269","fexpr__58273","fexpr__58277","fexpr__58278","sci.impl.vars/var-get","sci.impl.vars/var-set","sci.impl.vars/unqualify-symbol","cljs.core/qualified-symbol?","var_args","G__58280","sci.impl.vars/dynamic-var","sci.impl.vars.dynamic_var","init-val","sci.impl.vars/user-ns","sci.impl.vars/clojure-core-ns","sci.impl.vars/current-file","sci.impl.vars/current-ns","sci.impl.vars/current-ns-name","G__58285","sci.impl.vars/alter-var-root","args-arr__4850__auto__","len__4829__auto__","i__4830__auto__","argseq__4851__auto__","cljs.core/IndexedSeq","seq58282","G__58283","G__58284","self__4816__auto__","G__58286","G__58292","sci.impl.vars/new-var","G__58294","sci.impl.vars.new_var"],"sourcesContent":["(ns sci.impl.vars\n  {:no-doc true}\n  (:refer-clojure :exclude [var? binding\n                            push-thread-bindings\n                            get-thread-bindings\n                            pop-thread-bindings\n                            with-bindings*\n                            with-bindings\n                            thread-bound?\n                            alter-var-root\n                            var-get\n                            var-set\n                            bound-fn*])\n  (:require [sci.impl.macros :as macros]\n            [sci.impl.types :as t]\n            [sci.impl.unrestrict :refer [*unrestricted*]]\n            [sci.lang])\n  #?(:cljs (:require-macros [sci.impl.vars :refer [with-bindings\n                                                   with-writeable-namespace\n                                                   with-writeable-var]])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n(defprotocol HasName ;; INamed was already taken by CLJS\n  (getName [_]))\n\n(macros/deftime\n  (defmacro with-writeable-namespace\n    [the-ns-object ns-meta & body]\n    `(let [m# ~ns-meta]\n       (if (or *unrestricted* (not (:sci/built-in m#)))\n         (do ~@body)\n         (let [ns-obj# ~the-ns-object\n               name# (getName ns-obj#)]\n           (throw (ex-info (str \"Built-in namespace \" name# \" is read-only.\")\n                           {:ns ns-obj#})))))))\n\n(deftype SciNamespace [name #?(:clj ^:volatile-mutable meta\n                               :cljs ^:mutable meta)]\n  Object\n  (toString [_]\n    (str name))\n  HasName\n  (getName [_] name)\n  #?(:clj clojure.lang.IMeta :cljs IMeta)\n  #?(:clj (clojure.core/meta [_] meta) :cljs (-meta [_] meta))\n  #?(:clj clojure.lang.IReference)\n  #?(:clj (alterMeta [this f args]\n                     (with-writeable-namespace this meta\n                       (locking (set! meta (apply f meta args))))))\n  #?(:clj (resetMeta [this m]\n                     (with-writeable-namespace this meta\n                       (locking (set! meta m))))))\n\n(defn namespace? [x]\n  (instance? #?(:clj sci.impl.vars.SciNamespace\n                :cljs sci.impl.vars/SciNamespace) x))\n\n(deftype Frame [bindings prev])\n\n(def top-frame (Frame. {} nil))\n\n#?(:clj\n   (def ^ThreadLocal dvals (proxy [ThreadLocal] []\n                             (initialValue [] top-frame)))\n   :cljs\n   (def dvals (volatile! top-frame)))\n\n(defn get-thread-binding-frame ^Frame []\n  #?(:clj (.get dvals)\n     :cljs @dvals))\n\n(deftype TBox #?(:clj [thread ^:volatile-mutable val]\n                 :cljs [thread ^:mutable val])\n  t/IBox\n  (setVal [this v]\n    (set! val v))\n  (getVal [this] val))\n\n(defn clone-thread-binding-frame ^Frame []\n  (let [^Frame f #?(:clj (.get dvals)\n                    :cljs @dvals)]\n    (Frame. (.-bindings f) nil)))\n\n(defn reset-thread-binding-frame [frame]\n  #?(:clj (.set dvals frame)\n     :cljs (vreset! dvals frame)))\n\n(declare var?)\n\n(defn dynamic-var? [v]\n  ;; TODO: make separate field\n  (and (var? v)\n       (:dynamic (meta v))))\n\n(defprotocol IVar\n  (bindRoot [this v])\n  (getRawRoot [this])\n  (toSymbol [this])\n  (isMacro [this])\n  (hasRoot [this])\n  (setThreadBound [this v])\n  (unbind [this]))\n\n(defn push-thread-bindings [bindings]\n  (let [^Frame frame (get-thread-binding-frame)\n        bmap (.-bindings frame)\n        bmap (reduce (fn [acc [var* val*]]\n                       (when-not (dynamic-var? var*)\n                         (throw (new #?(:clj IllegalStateException\n                                        :cljs js/Error)\n                                     (str \"Can't dynamically bind non-dynamic var \" var*))))\n                       (setThreadBound var* true)\n                       (assoc acc var* (TBox. #?(:clj (Thread/currentThread)\n                                                 :cljs nil) val*)))\n                     bmap\n                     bindings)]\n    (reset-thread-binding-frame (Frame. bmap frame))))\n\n(defn pop-thread-bindings []\n  ;; type hint needed to satisfy CLJS compiler / shadow\n  (if-let [f (.-prev ^Frame (get-thread-binding-frame))]\n    (if (identical? top-frame f)\n      #?(:clj (.remove dvals)\n         :cljs (vreset! dvals top-frame))\n      (reset-thread-binding-frame f))\n    (throw (new #?(:clj Exception :cljs js/Error) \"No frame to pop.\"))))\n\n(defn get-thread-bindings []\n  (let [;; type hint added to prevent shadow-cljs warning, although fn has return tag\n        ^Frame f (get-thread-binding-frame)]\n    (loop [ret {}\n           kvs (seq (.-bindings f))]\n      (if kvs\n        (let [[var* ^TBox tbox] (first kvs)\n              tbox-val (t/getVal tbox)]\n          (recur (assoc ret var* tbox-val)\n                 (next kvs)))\n        ret))))\n\n(defn get-thread-binding ^TBox [sci-var]\n  (when-let [;; type hint added to prevent shadow-cljs warning, although fn has return tag\n             ^Frame f #?(:clj (.get dvals)\n                         :cljs @dvals)]\n    #?(:clj (.get ^java.util.Map (.-bindings f) sci-var)\n       :cljs (.get (.-bindings f) sci-var))))\n\n(defn binding-conveyor-fn\n  [f]\n  (let [frame (clone-thread-binding-frame)]\n    (fn\n      ([]\n       (reset-thread-binding-frame frame)\n       (f))\n      ([x]\n       (reset-thread-binding-frame frame)\n       (f x))\n      ([x y]\n       (reset-thread-binding-frame frame)\n       (f x y))\n      ([x y z]\n       (reset-thread-binding-frame frame)\n       (f x y z))\n      ([x y z & args]\n       (reset-thread-binding-frame frame)\n       (apply f x y z args)))))\n\n(defn throw-unbound-call-exception [the-var]\n  (throw (new #?(:clj IllegalStateException\n                 :cljs js/Error) (str \"Attempting to call unbound fn: \" the-var))))\n\n(deftype SciUnbound [the-var]\n  Object\n  (toString [_]\n    (str \"Unbound: \" the-var))\n  #?@(:clj [clojure.lang.IFn] :cljs [IFn])\n  (#?(:clj invoke :cljs -invoke) [_]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q r]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q r s]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q r s t]\n    (throw-unbound-call-exception the-var))\n  (#?(:clj invoke :cljs -invoke) [_ a b c d e f g h i j k l m n o p q r s t rest]\n    (throw-unbound-call-exception the-var))\n  #?(:clj\n     (applyTo [_ args]\n              (throw-unbound-call-exception the-var))))\n\n;; adapted from https://github.com/clojure/clojurescript/blob/df1837048d01b157a04bb3dc7fedc58ee349a24a/src/main/cljs/cljs/core.cljs#L1118\n\n(defn built-in-var? [var-meta]\n  (:sci/built-in var-meta))\n\n(macros/deftime\n  (defmacro with-writeable-var\n    [the-var var-meta & body]\n    `(let [vm# ~var-meta]\n       (if (or *unrestricted* (not (:sci/built-in vm#)))\n         (do ~@body)\n         (let [the-var# ~the-var\n               ns# (:ns vm#)\n               ns-name# (getName ns#)\n               name# (getName the-var#)]\n           (throw (ex-info (str \"Built-in var #'\" ns-name# \"/\" name# \" is read-only.\")\n                           {:var ~the-var})))))))\n\n(deftype SciVar [#?(:clj ^:volatile-mutable root\n                    :cljs ^:mutable root)\n                 sym\n                 #?(:clj ^:volatile-mutable meta\n                    :cljs ^:mutable meta)\n                 #?(:clj ^:volatile-mutable thread-bound\n                    :cljs ^:mutable thread-bound)]\n  #?(:clj\n     ;; marker interface, clj only for now\n     sci.lang.IVar)\n  HasName\n  (getName [this]\n    (or (:name meta) sym))\n  IVar\n  (bindRoot [this v]\n    (with-writeable-var this meta\n      (set! (.-root this) v)))\n  (getRawRoot [this]\n    root)\n  (toSymbol [this]\n    ; if we have at least a name from metadata, then build the symbol from that\n    (if-let [sym-name (some-> (:name meta) name)]\n      (symbol (some-> (:ns meta) getName name) sym-name)\n      ; otherwise, fall back to the symbol\n      sym))\n  (isMacro [_]\n    (or (:macro meta)\n        (when-some [m (clojure.core/meta root)]\n          (:sci/macro m))))\n  (setThreadBound [this v]\n    (set! (.-thread-bound this) v))\n  (unbind [this]\n    (with-writeable-var this meta\n      (set! (.-root this) (SciUnbound. this))))\n  (hasRoot [this]\n    (not (instance? SciUnbound root)))\n  t/IBox\n  (setVal [this v]\n    (if-let [b (get-thread-binding this)]\n      #?(:clj\n         (let [t (.-thread b)]\n           (if (not (identical? t (Thread/currentThread)))\n             (throw (new IllegalStateException\n                         (format \"Can't set!: %s from non-binding thread\" (toSymbol this))))\n             (t/setVal b v)))\n         :cljs (t/setVal b v))\n      (throw (new #?(:clj IllegalStateException :cljs js/Error)\n                  (str \"Can't change/establish root binding of \" this \" with set\")))))\n  (getVal [this] root)\n  #?(:clj clojure.lang.IDeref :cljs IDeref)\n  (#?(:clj deref\n      :cljs -deref) [this]\n    (if thread-bound\n      (if-let [tbox (get-thread-binding this)]\n        (t/getVal tbox)\n        root)\n      root))\n  Object\n  (toString [this]\n    (str \"#'\" (toSymbol this)))\n  #?(:cljs IPrintWithWriter)\n  #?(:cljs (-pr-writer [a writer opts]\n                       (-write writer \"#'\")\n                       (pr-writer (toSymbol a) writer opts)))\n  #?(:clj clojure.lang.IMeta :cljs IMeta)\n  #?(:clj (clojure.core/meta [_] meta) :cljs (-meta [_] meta))\n  ;; #?(:clj Comparable :cljs IEquiv)\n  ;; (-equiv [this other]\n  ;;   (if (instance? Var other)\n  ;;     (= (.-sym this) (.-sym other))\n  ;;     false))\n  ;; #?(:clj clojure.lang.IHashEq :cljs IHash)\n  ;; (-hash [_]\n  ;;   (hash-symbol sym))\n  #?(:clj clojure.lang.IReference)\n  #?(:clj (alterMeta [this f args]\n                     (with-writeable-var this meta\n                       (locking (set! meta (apply f meta args))))))\n  #?(:clj (resetMeta [this m]\n                     (with-writeable-var this meta\n                       (locking (set! meta m)))))\n  #?(:clj clojure.lang.IRef) ;; added for multi-methods\n  ;; #?(:cljs Fn) ;; In the real CLJS this is there... why?\n  #?(:clj clojure.lang.IFn :cljs IFn)\n  (#?(:clj invoke :cljs -invoke) [this]\n    (@this))\n  (#?(:clj invoke :cljs -invoke) [this a]\n    (@this a))\n  (#?(:clj invoke :cljs -invoke) [this a b]\n    (@this a b))\n  (#?(:clj invoke :cljs -invoke) [this a b c]\n    (@this a b c))\n  (#?(:clj invoke :cljs -invoke) [this a b c d]\n    (@this a b c d))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e]\n    (@this a b c d e))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f]\n    (@this a b c d e f))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g]\n    (@this a b c d e f g))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h]\n    (@this a b c d e f g h))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i]\n    (@this a b c d e f g h i))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j]\n    (@this a b c d e f g h i j))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k]\n    (@this a b c d e f g h i j k))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l]\n    (@this a b c d e f g h i j k l))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m]\n    (@this a b c d e f g h i j k l m))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m n]\n    (@this a b c d e f g h i j k l m n))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m n o]\n    (@this a b c d e f g h i j k l m n o))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m n o p]\n    (@this a b c d e f g h i j k l m n o p))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m n o p q]\n    (@this a b c d e f g h i j k l m n o p q))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m n o p q r]\n    (@this a b c d e f g h i j k l m n o p q r))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m n o p q r s]\n    (@this a b c d e f g h i j k l m n o p q r s))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m n o p q r s t]\n    (@this a b c d e f g h i j k l m n o p q r s t))\n  (#?(:clj invoke :cljs -invoke) [this a b c d e f g h i j k l m n o p q r s t rest]\n    (apply @this a b c d e f g h i j k l m n o p q r s t rest))\n  #?(:clj\n     (applyTo [this args]\n              (apply @this args))))\n\n#?(:clj\n   ;; Use public interface for print-method so it can be overriden in bb itself\n   (do (defmethod print-method sci.lang.IVar [o ^java.io.Writer w]\n         (.write w (str \"#'\" (toSymbol ^sci.impl.vars.IVar o))))\n       (prefer-method print-method sci.lang.IVar clojure.lang.IDeref)))\n\n(defn var-get [v]\n  (deref v))\n\n(defn var-set [v val]\n  (t/setVal v val))\n\n(defn var? [x]\n  (instance? #?(:clj sci.impl.vars.SciVar\n                :cljs sci.impl.vars/SciVar) x))\n\n(defn unqualify-symbol \n  \"If sym is namespace-qualified, remove the namespace, else return sym\"\n  [sym]\n  (if (qualified-symbol? sym)\n    (symbol (name sym))\n    sym))\n\n(defn dynamic-var\n  ([name]\n   (dynamic-var name nil (meta name)))\n  ([name init-val]\n   (dynamic-var name init-val (meta name)))\n  ([name init-val meta]\n   (let [meta (assoc meta :dynamic true :name (unqualify-symbol name))]\n     (SciVar. init-val name meta false))))\n\n;; foundational namespaces\n(def user-ns (->SciNamespace 'user nil))\n\n(def clojure-core-ns (->SciNamespace 'clojure.core nil))\n\n\n(def current-file (dynamic-var '*file* nil {:ns clojure-core-ns}))\n\n(def current-ns (dynamic-var '*ns* user-ns {:ns clojure-core-ns}))\n\n(defn current-ns-name []\n  (getName @current-ns))\n\n(macros/deftime\n  (defmacro with-bindings\n    \"Macro for binding sci vars for internal use.\"\n    [bindings & body]\n    `(do\n       ;; important: outside try\n       (vars/push-thread-bindings ~bindings)\n       (try\n         (do ~@body)\n         (finally\n           (vars/pop-thread-bindings))))))\n\n(defn alter-var-root\n  ([v f]\n   #?(:clj\n      (locking v (bindRoot v (f (getRawRoot v))))\n      :cljs (bindRoot v (f (getRawRoot v)))))\n  ([v f & args]\n   #?(:clj\n      (locking v (bindRoot v (apply f (getRawRoot v) args)))\n      :cljs (bindRoot v (apply f (getRawRoot v) args)))))\n\n(defn new-var\n  \"Returns a new sci var.\"\n  ([name] (doto (new-var name nil nil)\n            (unbind)))\n  ([name init-val] (new-var name init-val (meta name)))\n  ([name init-val meta] (->SciVar init-val name (assoc meta :name (unqualify-symbol name)) false)))\n\n(comment\n  (def v1 (SciVar. (fn [] 0) 'foo nil))\n  @v1 ;; 0\n  (push-thread-bindings {v1 2})\n  (get-thread-binding v1) ;; 2\n  (push-thread-bindings {v1 3})\n  (get-thread-binding v1) ;; 3\n  (pop-thread-bindings)\n  (get-thread-binding v1) ;; 2\n  (pop-thread-bindings)\n  (get-thread-binding v1) ;; nil\n  @v1 ;; 0\n  (pop-thread-bindings) ;; exception\n  )\n"]}