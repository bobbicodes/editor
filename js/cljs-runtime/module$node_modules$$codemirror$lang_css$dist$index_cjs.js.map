{
"version":3,
"file":"module$node_modules$$codemirror$lang_css$dist$index_cjs.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/@codemirror/lang-css/dist/index.cjs"],
"sourcesContent":["shadow$provide[\"module$node_modules$$codemirror$lang_css$dist$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar css$1 = require('@lezer/css');\nvar language = require('@codemirror/language');\n\nlet _properties = null;\nfunction properties() {\n    if (!_properties && typeof document == \"object\" && document.body) {\n        let names = [];\n        for (let prop in document.body.style) {\n            if (!/[A-Z]|^-|^(item|length)$/.test(prop))\n                names.push(prop);\n        }\n        _properties = names.sort().map(name => ({ type: \"property\", label: name }));\n    }\n    return _properties || [];\n}\nconst pseudoClasses = [\n    \"active\", \"after\", \"before\", \"checked\", \"default\",\n    \"disabled\", \"empty\", \"enabled\", \"first-child\", \"first-letter\",\n    \"first-line\", \"first-of-type\", \"focus\", \"hover\", \"in-range\",\n    \"indeterminate\", \"invalid\", \"lang\", \"last-child\", \"last-of-type\",\n    \"link\", \"not\", \"nth-child\", \"nth-last-child\", \"nth-last-of-type\",\n    \"nth-of-type\", \"only-of-type\", \"only-child\", \"optional\", \"out-of-range\",\n    \"placeholder\", \"read-only\", \"read-write\", \"required\", \"root\",\n    \"selection\", \"target\", \"valid\", \"visited\"\n].map(name => ({ type: \"class\", label: name }));\nconst values = [\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"after-white-space\",\n    \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\",\n    \"antialiased\", \"appworkspace\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\",\n    \"avoid-page\", \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\",\n    \"bidi-override\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"capitalize\",\n    \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\",\n    \"cjk-decimal\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"color\", \"color-burn\",\n    \"color-dodge\", \"column\", \"column-reverse\", \"compact\", \"condensed\", \"contain\", \"content\",\n    \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\",\n    \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\", \"destination-in\",\n    \"destination-out\", \"destination-over\", \"difference\", \"disc\", \"discard\", \"disclosure-closed\",\n    \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\",\n    \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\",\n    \"ethiopic-abegede-gez\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-gez\", \"ew-resize\", \"exclusion\",\n    \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\",\n    \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\", \"forwards\", \"from\",\n    \"geometricPrecision\", \"graytext\", \"grid\", \"groove\", \"hand\", \"hard-light\", \"help\", \"hidden\", \"hide\",\n    \"higher\", \"highlight\", \"highlighttext\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\",\n    \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-grid\",\n    \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"justify\", \"keep-all\",\n    \"landscape\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\", \"line-through\", \"linear\",\n    \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\",\n    \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lowercase\", \"ltr\", \"luminosity\", \"manipulation\",\n    \"match\", \"matrix\", \"matrix3d\", \"medium\", \"menu\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"n-resize\", \"narrower\",\n    \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\",\n    \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\",\n    \"oblique\", \"opacity\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"outset\", \"outside\",\n    \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\",\n    \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\",\n    \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\",\n    \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\",\n    \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\",\n    \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"saturation\",\n    \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\", \"scroll\", \"scrollbar\", \"scroll-position\",\n    \"se-resize\", \"self-start\", \"self-end\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\",\n    \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\",\n    \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"source-atop\", \"source-in\", \"source-out\",\n    \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\", \"start\",\n    \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\", \"subpixel-antialiased\", \"svg_masks\",\n    \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\", \"table-caption\", \"table-cell\",\n    \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\",\n    \"table-row-group\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thick\", \"thin\",\n    \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"to\", \"top\",\n    \"transform\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\",\n    \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\", \"upper-latin\",\n    \"uppercase\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\",\n    \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\",\n    \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\"\n].map(name => ({ type: \"keyword\", label: name })).concat([\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n].map(name => ({ type: \"constant\", label: name })));\nconst tags = [\n    \"a\", \"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"blockquote\", \"body\",\n    \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"dd\", \"del\",\n    \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\",\n    \"form\", \"header\", \"hgroup\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"html\", \"i\", \"iframe\",\n    \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"main\", \"meter\", \"nav\", \"ol\", \"output\",\n    \"p\", \"pre\", \"ruby\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"sub\", \"summary\",\n    \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"tr\", \"u\", \"ul\"\n].map(name => ({ type: \"type\", label: name }));\nconst identifier = /^[\\w-]*/;\n/**\nCSS property and value keyword completion source.\n*/\nconst cssCompletionSource = context => {\n    let { state, pos } = context, node = language.syntaxTree(state).resolveInner(pos, -1);\n    if (node.name == \"PropertyName\")\n        return { from: node.from, options: properties(), validFor: identifier };\n    if (node.name == \"ValueName\")\n        return { from: node.from, options: values, validFor: identifier };\n    if (node.name == \"PseudoClassName\")\n        return { from: node.from, options: pseudoClasses, validFor: identifier };\n    if (node.name == \"TagName\") {\n        for (let { parent } = node; parent; parent = parent.parent)\n            if (parent.name == \"Block\")\n                return { from: node.from, options: properties(), validFor: identifier };\n        return { from: node.from, options: tags, validFor: identifier };\n    }\n    if (!context.explicit)\n        return null;\n    let above = node.resolve(pos), before = above.childBefore(pos);\n    if (before && before.name == \":\" && above.name == \"PseudoClassSelector\")\n        return { from: pos, options: pseudoClasses, validFor: identifier };\n    if (before && before.name == \":\" && above.name == \"Declaration\" || above.name == \"ArgList\")\n        return { from: pos, options: values, validFor: identifier };\n    if (above.name == \"Block\")\n        return { from: pos, options: properties(), validFor: identifier };\n    return null;\n};\n\n/**\nA language provider based on the [Lezer CSS\nparser](https://github.com/lezer-parser/css), extended with\nhighlighting and indentation information.\n*/\nconst cssLanguage = language.LRLanguage.define({\n    parser: css$1.parser.configure({\n        props: [\n            language.indentNodeProp.add({\n                Declaration: language.continuedIndent()\n            }),\n            language.foldNodeProp.add({\n                Block: language.foldInside\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*\\}$/,\n        wordChars: \"-\"\n    }\n});\n/**\nLanguage support for CSS.\n*/\nfunction css() {\n    return new language.LanguageSupport(cssLanguage, cssLanguage.data.of({ autocomplete: cssCompletionSource }));\n}\n\nexports.css = css;\nexports.cssCompletionSource = cssCompletionSource;\nexports.cssLanguage = cssLanguage;\n\n};"],
"names":["shadow$provide","global","require","module","exports","properties","_properties","document","body","names","prop","style","test","push","sort","map","name","type","label","Object","defineProperty","value","css$1","language","pseudoClasses","values","concat","tags","identifier","cssCompletionSource","context","state","pos","node","syntaxTree","resolveInner","from","options","validFor","parent","explicit","above","resolve","before","childBefore","cssLanguage","LRLanguage","define","parser","configure","props","indentNodeProp","add","Declaration","continuedIndent","foldNodeProp","Block","foldInside","languageData","commentTokens","block","open","close","indentOnInput","wordChars","css","LanguageSupport","data","of","autocomplete"]
}
