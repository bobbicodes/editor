{"version":3,"sources":["nextjournal/clojure_mode/keymap.cljs"],"mappings":";;AAIA;;;8CAAA,9CAAMA,oGAEHC,EAAEC;AAFL,AAGE,OAACC,oBAAU,WAAKF,MAAEG,EAAEC;AAAT,AACE,IAAAC,qBAAmB,AAACE,4CAAIP,MAAEG;AAA1B,AAAA,GAAA,CAAAE,sBAAA;AAEE,OAACI,+CAAOT,MAAEG;;AAFZ,eAAAE,XAAUC;AAAV,AACE,OAACE,8CAAMR,MAAEG,EAAE,CAACC,kCAAAA,4CAAAA,ZAAEE,wBAAAA;;GACCN,EAAEC;;AAGlC,4CAAA,5CAAMS,gGAAWC;AAAjB,AAA0B,2DAAA,2CAAA,oGAAA,nMAACZ,4CAAYY,uGAAcC,sGAAyBA;;AAC9E,8CAAA,9CAAMC,oGAAaF;AAAnB,AAA4B,2DAAA,2CAAA,4FAAA,3LAACZ,4CAAYY,uGAAcG,8FAAiBA;;AAGxE;;;wCAAA,xCAAMC,wFAEHC;AAFH,AAKO,OAACE,+CAAO,eAAAC,JAAKG;AAAL,AAAA,IAAAF,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;UAAAA,NAAcG;UAAd,AAAAhB,4CAAAa,eAAA,jEAAyBI;AAAzB,AACE,OAACC,+CAAOH,IAAIE,IAAI,4DAAA,5DAACE,6CAAKC,iDAAS,mDAAA,nDAAClB,+CAAOc;4HAHjDP,tFACA,AAACC,4CAAIP,/EACL;;AAGP;;;0CAAA,1CAAMkB,4FAEHZ;AAFH,4BAIO,AAACd,oBACA,WAAKoB,IAAInB,EAAE0B,jEAEZ,OAACG;AAFA,AACE,OAACF,6CAAKR,IAAI,4CAAA,WAAAS,vDAACd;AAAD,AAAM,OAACJ,4CAAY,8CAAAkB,iBAAA,/DAACvB,mHAAaL;GAAI0B;oCAHlDb,jCACA;;AAKP,AAMA,uDAAA,wCAAA,wEAAA,8DAAA,gGAAA,iFAAA,iGAAA,8EAAA,0EAAA,oFAAA,sEAAA,kFAAA,gFAAA,0EAAA,qEAAA,uEAAA,iFAAA,sEAAA,2EAAA,gEAAA,yEAAA,sEAAA,2EAAA,mFAAA,2CAAA,oDAAA,YAAA,sDAAA,iFAAA,2CAAA,oDAAA,SAAA,sDAAA,yFAAA,mFAAA,2CAAA,oDAAA,wBAAA,mFAAA,2CAAA,oDAAA,MAAA,sDAAA,8GAAA,mFAAA,2CAAA,oDAAA,oBAAA,2CAAA,oDAAA,yBAAA,mFAAA,2CAAA,oDAAA,OAAA,sDAAA,kGAAA,oDAAA,iBAAA,2CAAA,oDAAA,gBAAA,sDAAA,kHAAA,mFAAA,2CAAA,oDAAA,iBAAA,2CAAA,oDAAA,yBAAA,mFAAA,2CAAA,oDAAA,YAAA,sDAAA,iFAAA,2CAAA,oDAAA,SAAA,sDAAA,yFAAA,mFAAA,2CAAA,oDAAA,QAAA,sDAAA,mGAAA,mFAAA,2CAAA,oDAAA,gBAAA,sDAAA,4EAAA,2CAAA,oDAAA,UAAA,sDAAA,4EAAA,2CAAA,oDAAA,wBAAA,mFAAA,2CAAA,oDAAA,gBAAA,oDAAA,wBAAA,2CAAA,oDAAA,6BAAA,mFAAA,2CAAA,oDAAA,aAAA,oDAAA,6BAAA,2CAAA,oDAAA,qBAAA,2CAAA,oDAAA,wBAAA,mFAAA,2CAAA,oDAAA,iBAAA,sDAAA,gFAAA,2CAAA,oDAAA,WAAA,sDAAA,gFAAA,2CAAA,oDAAA,yBAAA,mFAAA,2CAAA,oDAAA,eAAA,sDAAA,4EAAA,2CAAA,oDAAA,SAAA,sDAAA,4EAAA,2CAAA,oDAAA,wBAAA,mFAAA,2CAAA,oDAAA,yBAAA,2CAAA,oDAAA,SAAA,sDAAA,wFAAA,mFAAA,2CAAA,oDAAA,QAAA,sDAAA,iGAAA,mFAAA,2CAAA,oDAAA,QAAA,0EAAA,qBAAA,mFAAA,2CAAA,oDAAA,aAAA,sDAAA,mFAAA,2CAAA,oDAAA,SAAA,sDAAA,2FAAA,mFAAA,2CAAA,oDAAA,yBAAA,mFAAA,2CAAA,oDAAA,yBAAA,mFAAA,2CAAA,oDAAA,UAAA,sDAAA,6EAAA,2CAAA,oDAAA,SAAA,sDAAA,qFAAA,mFAAA,2CAAA,oDAAA,cAAA,sDAAA,iFAAA,2CAAA,oDAAA,WAAA,sDAAA,iFAAA,2CAAA,oDAAA,//VAAKiB;AAsDL,uDAAA,wCAAA,yDAAA,4DAAA,8EAAA,yEAAA,oDAAA,uEAAA,qEAAA,sEAAA,8DAAA,0EAAA,0DAAA,8EAAA,mFAAA,2CAAA,oDAAA,MAAA,mDAAA,iDAAA,mFAAA,2CAAA,oDAAA,gBAAA,sDAAA,4EAAA,mDAAA,gEAAA,0EAAA,qBAAA,mFAAA,2CAAA,oDAAA,QAAA,mDAAA,4CAAA,mFAAA,2CAAA,mDAAA,kBAAA,oDAAA,sBAAA,2CAAA,oDAAA,wBAAA,mFAAA,2CAAA,oDAAA,SAAA,mDAAA,8DAAA,mFAAA,2CAAA,oDAAA,kBAAA,mDAAA,iDAAA,0EAAA,aAAA,2CAAA,oDAAA,cAAA,0EAAA,qBAAA,mFAAA,2CAAA,oDAAA,iBAAA,mDAAA,yCAAA,0EAAA,aAAA,2CAAA,oDAAA,cAAA,0EAAA,qBAAA,mFAAA,2CAAA,mDAAA,0CAAA,oDAAA,sCAAA,mFAAA,2CAAA,oDAAA,iBAAA,sDAAA,6EAAA,mDAAA,iEAAA,0EAAA,qBAAA,mFAAA,2CAAA,mDAAA,wCAAA,oDAAA,qBAAA,0EAAA,qBAAA,mFAAA,2CAAA,oDAAA,QAAA,mDAAA,0CAAA,0EAAA,qBAAA,mFAAA,2CAAA,mDAAA,oBAAA,oDAAA,wBAAA,2CAAA,oDAAA,9rLAAKC;AAqDL,AAAKC,0CAAQ,AAACP,wCAAQK;AACtB,AAAKG,0CAAQ,AAACR,wCAAQM;AACtB,AAAKG,2CAAS,AAASD,+CAAQD;AAE/B","names":["nextjournal.clojure-mode.keymap/update-some","m","updates","cljs.core/reduce-kv","k","f","temp__5755__auto__","existing","cljs.core.get","cljs.core.assoc","cljs.core.dissoc","nextjournal.clojure-mode.keymap/serialize","command","nextjournal.clojure-mode.commands/reverse-index","nextjournal.clojure-mode.keymap/deserialize","nextjournal.clojure-mode.commands/index","nextjournal.clojure-mode.keymap/group","commands","cljs.core.map","cljs.core.reduce","p__60693","map__60694","cljs.core/--destructure-map","out","cmd","run","cljs.core.update","cljs.core.fnil","cljs.core/conj","nextjournal.clojure-mode.keymap/ungroup","bindings","cljs.core.into","p1__60695#","cljs.core/clj->js","nextjournal.clojure-mode.keymap/builtin-keymap*","nextjournal.clojure-mode.keymap/paredit-keymap*","nextjournal.clojure-mode.keymap/builtin","nextjournal.clojure-mode.keymap/paredit","nextjournal.clojure-mode.keymap/complete"],"sourcesContent":["(ns nextjournal.clojure-mode.keymap\r\n  (:require [\"@codemirror/commands\" :as commands]\r\n            [nextjournal.clojure-mode.commands :as cmd]))\r\n\r\n(defn update-some\r\n  \"Updates keys of map when key has value\"\r\n  [m updates]\r\n  (reduce-kv (fn [m k f]\r\n               (if-some [existing (get m k)]\r\n                 (assoc m k (f existing))\r\n                 (dissoc m k))) m updates))\r\n\r\n;; (de)serializing commands from keyword-id to function\r\n(defn serialize [command] (update-some command {:run cmd/reverse-index :shift cmd/reverse-index}))\r\n(defn deserialize [command] (update-some command {:run cmd/index :shift cmd/index}))\r\n\r\n\r\n(defn group\r\n  \"Returns a grouped map of bindings for a list of CodeMirror keymap entries\"\r\n  [commands]\r\n  (->> commands\r\n       (map serialize)\r\n       (reduce (fn [out {:as cmd :keys [run]}]\r\n                 (update out run (fnil conj []) (dissoc cmd :run))) {})))\r\n\r\n(defn ungroup\r\n  \"Returns a list of CodeMirror keymap entries for a grouped map of bindings\"\r\n  [commands]\r\n  (->> commands\r\n       (reduce-kv\r\n        (fn [out k bindings]\r\n          (into out (map #(deserialize (assoc % :run k)) bindings))) [])\r\n       (clj->js)))\r\n\r\n(comment\r\n (->> [commands/standardKeymap #_historyKeymap]\r\n      (mapcat #(js->clj % :keywordize-keys true))\r\n      group\r\n      cljs.pprint/pprint))\r\n\r\n(def builtin-keymap*\r\n  {:cursorLineDown\r\n   [{:key \"ArrowDown\", :shift :selectLineDown}\r\n    {:mac \"Ctrl-n\", :shift :selectLineDown}],\r\n   :selectAll [{:key \"Mod-a\"}],\r\n   :cursorLineBoundaryForward\r\n   [{:key \"End\", :shift :selectLineBoundaryForward}],\r\n   :deleteCharBackward [{:key \"Backspace\"} {:mac \"Ctrl-h\"}],\r\n   :cursorLineBoundaryBackward\r\n   [{:key \"Home\", :shift :selectLineBoundaryBackward\r\n     :mac \"Ctrl-a\"}\r\n    {:mac \"Cmd-ArrowLeft\" :shift :selectLineBoundaryBackward}],\r\n   :deleteCharForward [{:key \"Delete\"} {:mac \"Ctrl-d\"}],\r\n   :cursorCharLeft\r\n   [{:key \"ArrowLeft\", :shift :selectCharLeft}\r\n    {:mac \"Ctrl-b\", :shift :selectCharLeft}],\r\n   :cursorGroupBackward [{:mac \"Alt-b\", :shift :selectGroupBackward}],\r\n   :cursorDocEnd\r\n   [{:mac \"Cmd-ArrowDown\", :shift :selectDocEnd}\r\n    {:key \"Mod-End\", :shift :selectDocEnd}\r\n    {:mac \"Alt->\"}],\r\n   :deleteGroupBackward\r\n   [{:key \"Mod-Backspace\", :mac \"Alt-Backspace\"}\r\n    {:mac \"Ctrl-Alt-h\"}],\r\n   :deleteGroupForward\r\n   [{:key \"Mod-Delete\", :mac \"Ctrl-Alt-Backspace\"}\r\n    {:mac \"Alt-Delete\"}\r\n    {:mac \"Alt-d\"}],\r\n   :cursorPageDown\r\n   [{:mac \"Ctrl-ArrowDown\", :shift :selectPageDown}\r\n    {:key \"PageDown\", :shift :selectPageDown}\r\n    {:mac \"Ctrl-v\"}],\r\n   :cursorPageUp\r\n   [{:mac \"Ctrl-ArrowUp\", :shift :selectPageUp}\r\n    {:key \"PageUp\", :shift :selectPageUp}\r\n    {:mac \"Alt-v\"}],\r\n   :cursorLineEnd\r\n   [{:mac \"Cmd-ArrowRight\"}\r\n    {:mac \"Ctrl-e\", :shift :selectLineEnd}],\r\n   :cursorGroupForward [{:mac \"Alt-f\", :shift :selectGroupForward}],\r\n   :undoSelection [{:key \"Mod-u\", :preventDefault true}],\r\n   :cursorCharRight\r\n   [{:key \"ArrowRight\", :shift :selectCharRight}\r\n    {:mac \"Ctrl-f\", :shift :selectCharRight}],\r\n   :splitLine [{:mac \"Ctrl-o\"}],\r\n   :transposeChars [{:mac \"Ctrl-t\"}],\r\n   :cursorLineUp\r\n   [{:key \"ArrowUp\", :shift :selectLineUp}\r\n    {:mac \"Ctrl-p\", :shift :selectLineUp}],\r\n   :cursorDocStart\r\n   [{:mac \"Cmd-ArrowUp\", :shift :selectDocStart}\r\n    {:key \"Mod-Home\", :shift :selectDocStart}\r\n    {:mac \"Alt-<\"}]})\r\n\r\n(def paredit-keymap*\r\n  {:indent\r\n   [{:key \"Tab\"\r\n     :doc \"Indent document (or selection)\"}]\r\n   :enter-and-indent\r\n   [{:key \"Enter\"\r\n     :doc \"Insert newline and indent\"}]\r\n   :unwrap\r\n   [{:key \"Alt-s\"\r\n     :doc \"Lift contents of collection into parent\"\r\n     :preventDefault true}]\r\n   :kill\r\n   [{:key \"Ctrl-k\"\r\n     :doc \"Remove all forms from cursor to end of line\"}]\r\n   :nav-left\r\n   [{:key \"Alt-ArrowLeft\"\r\n     :shift :nav-select-left\r\n     :doc \"Move cursor one unit to the left (shift: selects this region)\"\r\n     :preventDefault true}]\r\n   :nav-right\r\n   [{:key \"Alt-ArrowRight\"\r\n     :shift :nav-select-right\r\n     :doc \"Move cursor one unit to the right (shift: selects this region)\"\r\n     :preventDefault true}]\r\n\r\n   :slurp-forward\r\n   [{:key \"Ctrl-ArrowRight\"\r\n     :doc \"Expand collection to include form to the right\"\r\n     :preventDefault true}\r\n    {:key \"Mod-Shift-k\" :preventDefault true}]\r\n   :slurp-backward\r\n   [{:doc \"Grow collection backwards by one form\"\r\n     :key \"Ctrl-Alt-ArrowLeft\"\r\n     :preventDefault true}]\r\n\r\n   :barf-forward\r\n   [{:key \"Ctrl-ArrowLeft\"\r\n     :doc \"Shrink collection forwards by one form\"\r\n     :preventDefault true}\r\n    {:key \"Mod-Shift-j\" :preventDefault true}]\r\n   :barf-backward\r\n   [{:doc \"Shrink collection backwards by one form\"\r\n     :key \"Ctrl-Alt-ArrowRight\"}]\r\n\r\n   :selection-grow\r\n   [{:doc \"Grow selections\"\r\n     :key \"Alt-ArrowUp\"}\r\n    {:key \"Mod-1\"}]\r\n   :selection-return\r\n   [{:doc \"Shrink selections\"\r\n     :key \"Alt-ArrowDown\"}\r\n    {:key \"Mod-2\"}]})\r\n\r\n(def builtin (ungroup builtin-keymap*))\r\n(def paredit (ungroup paredit-keymap*))\r\n(def complete (.concat paredit builtin))\r\n\r\n(comment\r\n (ungroup default-keymap))\r\n"]}